// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AliveCheck.proto

package AliveCheck;

public final class AliveCheck {
  private AliveCheck() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AliveCheckReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AliveCheck.AliveCheckReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * not just anyone can see I'm alive
     * </pre>
     *
     * <code>.BasilType.AccessAuthorization auth = 1;</code>
     */
    boolean hasAuth();
    /**
     * <pre>
     * not just anyone can see I'm alive
     * </pre>
     *
     * <code>.BasilType.AccessAuthorization auth = 1;</code>
     */
    BasilType.BasilTypes.AccessAuthorization getAuth();
    /**
     * <pre>
     * not just anyone can see I'm alive
     * </pre>
     *
     * <code>.BasilType.AccessAuthorization auth = 1;</code>
     */
    BasilType.BasilTypes.AccessAuthorizationOrBuilder getAuthOrBuilder();

    /**
     * <code>uint64 time = 2;</code>
     */
    long getTime();

    /**
     * <code>int32 sequenceNum = 3;</code>
     */
    int getSequenceNum();
  }
  /**
   * <pre>
   * Ping the other side to measure delay and functionality
   * </pre>
   *
   * Protobuf type {@code AliveCheck.AliveCheckReq}
   */
  public  static final class AliveCheckReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AliveCheck.AliveCheckReq)
      AliveCheckReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AliveCheckReq.newBuilder() to construct.
    private AliveCheckReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AliveCheckReq() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AliveCheckReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              BasilType.BasilTypes.AccessAuthorization.Builder subBuilder = null;
              if (auth_ != null) {
                subBuilder = auth_.toBuilder();
              }
              auth_ = input.readMessage(BasilType.BasilTypes.AccessAuthorization.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(auth_);
                auth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              time_ = input.readUInt64();
              break;
            }
            case 24: {

              sequenceNum_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AliveCheck.AliveCheck.AliveCheckReq.class, AliveCheck.AliveCheck.AliveCheckReq.Builder.class);
    }

    public static final int AUTH_FIELD_NUMBER = 1;
    private BasilType.BasilTypes.AccessAuthorization auth_;
    /**
     * <pre>
     * not just anyone can see I'm alive
     * </pre>
     *
     * <code>.BasilType.AccessAuthorization auth = 1;</code>
     */
    public boolean hasAuth() {
      return auth_ != null;
    }
    /**
     * <pre>
     * not just anyone can see I'm alive
     * </pre>
     *
     * <code>.BasilType.AccessAuthorization auth = 1;</code>
     */
    public BasilType.BasilTypes.AccessAuthorization getAuth() {
      return auth_ == null ? BasilType.BasilTypes.AccessAuthorization.getDefaultInstance() : auth_;
    }
    /**
     * <pre>
     * not just anyone can see I'm alive
     * </pre>
     *
     * <code>.BasilType.AccessAuthorization auth = 1;</code>
     */
    public BasilType.BasilTypes.AccessAuthorizationOrBuilder getAuthOrBuilder() {
      return getAuth();
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <code>uint64 time = 2;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int SEQUENCENUM_FIELD_NUMBER = 3;
    private int sequenceNum_;
    /**
     * <code>int32 sequenceNum = 3;</code>
     */
    public int getSequenceNum() {
      return sequenceNum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (auth_ != null) {
        output.writeMessage(1, getAuth());
      }
      if (time_ != 0L) {
        output.writeUInt64(2, time_);
      }
      if (sequenceNum_ != 0) {
        output.writeInt32(3, sequenceNum_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (auth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAuth());
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, time_);
      }
      if (sequenceNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sequenceNum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof AliveCheck.AliveCheck.AliveCheckReq)) {
        return super.equals(obj);
      }
      AliveCheck.AliveCheck.AliveCheckReq other = (AliveCheck.AliveCheck.AliveCheckReq) obj;

      if (hasAuth() != other.hasAuth()) return false;
      if (hasAuth()) {
        if (!getAuth()
            .equals(other.getAuth())) return false;
      }
      if (getTime()
          != other.getTime()) return false;
      if (getSequenceNum()
          != other.getSequenceNum()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAuth()) {
        hash = (37 * hash) + AUTH_FIELD_NUMBER;
        hash = (53 * hash) + getAuth().hashCode();
      }
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + SEQUENCENUM_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNum();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static AliveCheck.AliveCheck.AliveCheckReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(AliveCheck.AliveCheck.AliveCheckReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Ping the other side to measure delay and functionality
     * </pre>
     *
     * Protobuf type {@code AliveCheck.AliveCheckReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AliveCheck.AliveCheckReq)
        AliveCheck.AliveCheck.AliveCheckReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AliveCheck.AliveCheck.AliveCheckReq.class, AliveCheck.AliveCheck.AliveCheckReq.Builder.class);
      }

      // Construct using AliveCheck.AliveCheck.AliveCheckReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (authBuilder_ == null) {
          auth_ = null;
        } else {
          auth_ = null;
          authBuilder_ = null;
        }
        time_ = 0L;

        sequenceNum_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckReq_descriptor;
      }

      @java.lang.Override
      public AliveCheck.AliveCheck.AliveCheckReq getDefaultInstanceForType() {
        return AliveCheck.AliveCheck.AliveCheckReq.getDefaultInstance();
      }

      @java.lang.Override
      public AliveCheck.AliveCheck.AliveCheckReq build() {
        AliveCheck.AliveCheck.AliveCheckReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public AliveCheck.AliveCheck.AliveCheckReq buildPartial() {
        AliveCheck.AliveCheck.AliveCheckReq result = new AliveCheck.AliveCheck.AliveCheckReq(this);
        if (authBuilder_ == null) {
          result.auth_ = auth_;
        } else {
          result.auth_ = authBuilder_.build();
        }
        result.time_ = time_;
        result.sequenceNum_ = sequenceNum_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AliveCheck.AliveCheck.AliveCheckReq) {
          return mergeFrom((AliveCheck.AliveCheck.AliveCheckReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(AliveCheck.AliveCheck.AliveCheckReq other) {
        if (other == AliveCheck.AliveCheck.AliveCheckReq.getDefaultInstance()) return this;
        if (other.hasAuth()) {
          mergeAuth(other.getAuth());
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getSequenceNum() != 0) {
          setSequenceNum(other.getSequenceNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AliveCheck.AliveCheck.AliveCheckReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AliveCheck.AliveCheck.AliveCheckReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private BasilType.BasilTypes.AccessAuthorization auth_;
      private com.google.protobuf.SingleFieldBuilderV3<
          BasilType.BasilTypes.AccessAuthorization, BasilType.BasilTypes.AccessAuthorization.Builder, BasilType.BasilTypes.AccessAuthorizationOrBuilder> authBuilder_;
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public boolean hasAuth() {
        return authBuilder_ != null || auth_ != null;
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public BasilType.BasilTypes.AccessAuthorization getAuth() {
        if (authBuilder_ == null) {
          return auth_ == null ? BasilType.BasilTypes.AccessAuthorization.getDefaultInstance() : auth_;
        } else {
          return authBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public Builder setAuth(BasilType.BasilTypes.AccessAuthorization value) {
        if (authBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          auth_ = value;
          onChanged();
        } else {
          authBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public Builder setAuth(
          BasilType.BasilTypes.AccessAuthorization.Builder builderForValue) {
        if (authBuilder_ == null) {
          auth_ = builderForValue.build();
          onChanged();
        } else {
          authBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public Builder mergeAuth(BasilType.BasilTypes.AccessAuthorization value) {
        if (authBuilder_ == null) {
          if (auth_ != null) {
            auth_ =
              BasilType.BasilTypes.AccessAuthorization.newBuilder(auth_).mergeFrom(value).buildPartial();
          } else {
            auth_ = value;
          }
          onChanged();
        } else {
          authBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public Builder clearAuth() {
        if (authBuilder_ == null) {
          auth_ = null;
          onChanged();
        } else {
          auth_ = null;
          authBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public BasilType.BasilTypes.AccessAuthorization.Builder getAuthBuilder() {
        
        onChanged();
        return getAuthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      public BasilType.BasilTypes.AccessAuthorizationOrBuilder getAuthOrBuilder() {
        if (authBuilder_ != null) {
          return authBuilder_.getMessageOrBuilder();
        } else {
          return auth_ == null ?
              BasilType.BasilTypes.AccessAuthorization.getDefaultInstance() : auth_;
        }
      }
      /**
       * <pre>
       * not just anyone can see I'm alive
       * </pre>
       *
       * <code>.BasilType.AccessAuthorization auth = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BasilType.BasilTypes.AccessAuthorization, BasilType.BasilTypes.AccessAuthorization.Builder, BasilType.BasilTypes.AccessAuthorizationOrBuilder> 
          getAuthFieldBuilder() {
        if (authBuilder_ == null) {
          authBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BasilType.BasilTypes.AccessAuthorization, BasilType.BasilTypes.AccessAuthorization.Builder, BasilType.BasilTypes.AccessAuthorizationOrBuilder>(
                  getAuth(),
                  getParentForChildren(),
                  isClean());
          auth_ = null;
        }
        return authBuilder_;
      }

      private long time_ ;
      /**
       * <code>uint64 time = 2;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>uint64 time = 2;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 time = 2;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private int sequenceNum_ ;
      /**
       * <code>int32 sequenceNum = 3;</code>
       */
      public int getSequenceNum() {
        return sequenceNum_;
      }
      /**
       * <code>int32 sequenceNum = 3;</code>
       */
      public Builder setSequenceNum(int value) {
        
        sequenceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sequenceNum = 3;</code>
       */
      public Builder clearSequenceNum() {
        
        sequenceNum_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AliveCheck.AliveCheckReq)
    }

    // @@protoc_insertion_point(class_scope:AliveCheck.AliveCheckReq)
    private static final AliveCheck.AliveCheck.AliveCheckReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AliveCheck.AliveCheck.AliveCheckReq();
    }

    public static AliveCheck.AliveCheck.AliveCheckReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AliveCheckReq>
        PARSER = new com.google.protobuf.AbstractParser<AliveCheckReq>() {
      @java.lang.Override
      public AliveCheckReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AliveCheckReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AliveCheckReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AliveCheckReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public AliveCheck.AliveCheck.AliveCheckReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AliveCheckRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AliveCheck.AliveCheckResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>int32 sequenceNum = 2;</code>
     */
    int getSequenceNum();

    /**
     * <pre>
     * When the AliveCheck was received
     * </pre>
     *
     * <code>uint64 timeReceived = 3;</code>
     */
    long getTimeReceived();

    /**
     * <pre>
     * The sequence number sent in the AliveCheck
     * </pre>
     *
     * <code>int32 sequenceNumReceived = 4;</code>
     */
    int getSequenceNumReceived();
  }
  /**
   * Protobuf type {@code AliveCheck.AliveCheckResp}
   */
  public  static final class AliveCheckResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AliveCheck.AliveCheckResp)
      AliveCheckRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AliveCheckResp.newBuilder() to construct.
    private AliveCheckResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AliveCheckResp() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AliveCheckResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              time_ = input.readUInt64();
              break;
            }
            case 16: {

              sequenceNum_ = input.readInt32();
              break;
            }
            case 24: {

              timeReceived_ = input.readUInt64();
              break;
            }
            case 32: {

              sequenceNumReceived_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AliveCheck.AliveCheck.AliveCheckResp.class, AliveCheck.AliveCheck.AliveCheckResp.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>uint64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int SEQUENCENUM_FIELD_NUMBER = 2;
    private int sequenceNum_;
    /**
     * <code>int32 sequenceNum = 2;</code>
     */
    public int getSequenceNum() {
      return sequenceNum_;
    }

    public static final int TIMERECEIVED_FIELD_NUMBER = 3;
    private long timeReceived_;
    /**
     * <pre>
     * When the AliveCheck was received
     * </pre>
     *
     * <code>uint64 timeReceived = 3;</code>
     */
    public long getTimeReceived() {
      return timeReceived_;
    }

    public static final int SEQUENCENUMRECEIVED_FIELD_NUMBER = 4;
    private int sequenceNumReceived_;
    /**
     * <pre>
     * The sequence number sent in the AliveCheck
     * </pre>
     *
     * <code>int32 sequenceNumReceived = 4;</code>
     */
    public int getSequenceNumReceived() {
      return sequenceNumReceived_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeUInt64(1, time_);
      }
      if (sequenceNum_ != 0) {
        output.writeInt32(2, sequenceNum_);
      }
      if (timeReceived_ != 0L) {
        output.writeUInt64(3, timeReceived_);
      }
      if (sequenceNumReceived_ != 0) {
        output.writeInt32(4, sequenceNumReceived_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, time_);
      }
      if (sequenceNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sequenceNum_);
      }
      if (timeReceived_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, timeReceived_);
      }
      if (sequenceNumReceived_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sequenceNumReceived_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof AliveCheck.AliveCheck.AliveCheckResp)) {
        return super.equals(obj);
      }
      AliveCheck.AliveCheck.AliveCheckResp other = (AliveCheck.AliveCheck.AliveCheckResp) obj;

      if (getTime()
          != other.getTime()) return false;
      if (getSequenceNum()
          != other.getSequenceNum()) return false;
      if (getTimeReceived()
          != other.getTimeReceived()) return false;
      if (getSequenceNumReceived()
          != other.getSequenceNumReceived()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + SEQUENCENUM_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNum();
      hash = (37 * hash) + TIMERECEIVED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimeReceived());
      hash = (37 * hash) + SEQUENCENUMRECEIVED_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceNumReceived();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static AliveCheck.AliveCheck.AliveCheckResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(AliveCheck.AliveCheck.AliveCheckResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AliveCheck.AliveCheckResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AliveCheck.AliveCheckResp)
        AliveCheck.AliveCheck.AliveCheckRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AliveCheck.AliveCheck.AliveCheckResp.class, AliveCheck.AliveCheck.AliveCheckResp.Builder.class);
      }

      // Construct using AliveCheck.AliveCheck.AliveCheckResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0L;

        sequenceNum_ = 0;

        timeReceived_ = 0L;

        sequenceNumReceived_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AliveCheck.AliveCheck.internal_static_AliveCheck_AliveCheckResp_descriptor;
      }

      @java.lang.Override
      public AliveCheck.AliveCheck.AliveCheckResp getDefaultInstanceForType() {
        return AliveCheck.AliveCheck.AliveCheckResp.getDefaultInstance();
      }

      @java.lang.Override
      public AliveCheck.AliveCheck.AliveCheckResp build() {
        AliveCheck.AliveCheck.AliveCheckResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public AliveCheck.AliveCheck.AliveCheckResp buildPartial() {
        AliveCheck.AliveCheck.AliveCheckResp result = new AliveCheck.AliveCheck.AliveCheckResp(this);
        result.time_ = time_;
        result.sequenceNum_ = sequenceNum_;
        result.timeReceived_ = timeReceived_;
        result.sequenceNumReceived_ = sequenceNumReceived_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AliveCheck.AliveCheck.AliveCheckResp) {
          return mergeFrom((AliveCheck.AliveCheck.AliveCheckResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(AliveCheck.AliveCheck.AliveCheckResp other) {
        if (other == AliveCheck.AliveCheck.AliveCheckResp.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getSequenceNum() != 0) {
          setSequenceNum(other.getSequenceNum());
        }
        if (other.getTimeReceived() != 0L) {
          setTimeReceived(other.getTimeReceived());
        }
        if (other.getSequenceNumReceived() != 0) {
          setSequenceNumReceived(other.getSequenceNumReceived());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AliveCheck.AliveCheck.AliveCheckResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AliveCheck.AliveCheck.AliveCheckResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>uint64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>uint64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private int sequenceNum_ ;
      /**
       * <code>int32 sequenceNum = 2;</code>
       */
      public int getSequenceNum() {
        return sequenceNum_;
      }
      /**
       * <code>int32 sequenceNum = 2;</code>
       */
      public Builder setSequenceNum(int value) {
        
        sequenceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sequenceNum = 2;</code>
       */
      public Builder clearSequenceNum() {
        
        sequenceNum_ = 0;
        onChanged();
        return this;
      }

      private long timeReceived_ ;
      /**
       * <pre>
       * When the AliveCheck was received
       * </pre>
       *
       * <code>uint64 timeReceived = 3;</code>
       */
      public long getTimeReceived() {
        return timeReceived_;
      }
      /**
       * <pre>
       * When the AliveCheck was received
       * </pre>
       *
       * <code>uint64 timeReceived = 3;</code>
       */
      public Builder setTimeReceived(long value) {
        
        timeReceived_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When the AliveCheck was received
       * </pre>
       *
       * <code>uint64 timeReceived = 3;</code>
       */
      public Builder clearTimeReceived() {
        
        timeReceived_ = 0L;
        onChanged();
        return this;
      }

      private int sequenceNumReceived_ ;
      /**
       * <pre>
       * The sequence number sent in the AliveCheck
       * </pre>
       *
       * <code>int32 sequenceNumReceived = 4;</code>
       */
      public int getSequenceNumReceived() {
        return sequenceNumReceived_;
      }
      /**
       * <pre>
       * The sequence number sent in the AliveCheck
       * </pre>
       *
       * <code>int32 sequenceNumReceived = 4;</code>
       */
      public Builder setSequenceNumReceived(int value) {
        
        sequenceNumReceived_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sequence number sent in the AliveCheck
       * </pre>
       *
       * <code>int32 sequenceNumReceived = 4;</code>
       */
      public Builder clearSequenceNumReceived() {
        
        sequenceNumReceived_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:AliveCheck.AliveCheckResp)
    }

    // @@protoc_insertion_point(class_scope:AliveCheck.AliveCheckResp)
    private static final AliveCheck.AliveCheck.AliveCheckResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AliveCheck.AliveCheck.AliveCheckResp();
    }

    public static AliveCheck.AliveCheck.AliveCheckResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AliveCheckResp>
        PARSER = new com.google.protobuf.AbstractParser<AliveCheckResp>() {
      @java.lang.Override
      public AliveCheckResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AliveCheckResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AliveCheckResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AliveCheckResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public AliveCheck.AliveCheck.AliveCheckResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AliveCheck_AliveCheckReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AliveCheck_AliveCheckReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AliveCheck_AliveCheckResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AliveCheck_AliveCheckResp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020AliveCheck.proto\022\nAliveCheck\032\020BasilTyp" +
      "es.proto\"`\n\rAliveCheckReq\022,\n\004auth\030\001 \001(\0132" +
      "\036.BasilType.AccessAuthorization\022\014\n\004time\030" +
      "\002 \001(\004\022\023\n\013sequenceNum\030\003 \001(\005\"f\n\016AliveCheck" +
      "Resp\022\014\n\004time\030\001 \001(\004\022\023\n\013sequenceNum\030\002 \001(\005\022" +
      "\024\n\014timeReceived\030\003 \001(\004\022\033\n\023sequenceNumRece" +
      "ived\030\004 \001(\005B)\252\002&org.herbal3d.basil.protoc" +
      "ol.AliveCheckb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          BasilType.BasilTypes.getDescriptor(),
        }, assigner);
    internal_static_AliveCheck_AliveCheckReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_AliveCheck_AliveCheckReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AliveCheck_AliveCheckReq_descriptor,
        new java.lang.String[] { "Auth", "Time", "SequenceNum", });
    internal_static_AliveCheck_AliveCheckResp_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_AliveCheck_AliveCheckResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AliveCheck_AliveCheckResp_descriptor,
        new java.lang.String[] { "Time", "SequenceNum", "TimeReceived", "SequenceNumReceived", });
    BasilType.BasilTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
