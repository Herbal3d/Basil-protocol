// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AliveCheck.proto

#ifndef PROTOBUF_INCLUDED_AliveCheck_2eproto
#define PROTOBUF_INCLUDED_AliveCheck_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google
#include "BasilTypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_AliveCheck_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_AliveCheck_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_AliveCheck_2eproto();
namespace AliveCheck {
class AliveCheckReq;
class AliveCheckReqDefaultTypeInternal;
extern AliveCheckReqDefaultTypeInternal _AliveCheckReq_default_instance_;
class AliveCheckResp;
class AliveCheckRespDefaultTypeInternal;
extern AliveCheckRespDefaultTypeInternal _AliveCheckResp_default_instance_;
}  // namespace AliveCheck
namespace google {
namespace protobuf {
template<> ::AliveCheck::AliveCheckReq* Arena::CreateMaybeMessage<::AliveCheck::AliveCheckReq>(Arena*);
template<> ::AliveCheck::AliveCheckResp* Arena::CreateMaybeMessage<::AliveCheck::AliveCheckResp>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace AliveCheck {

// ===================================================================

class AliveCheckReq final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AliveCheck.AliveCheckReq) */ {
 public:
  AliveCheckReq();
  virtual ~AliveCheckReq();

  AliveCheckReq(const AliveCheckReq& from);

  inline AliveCheckReq& operator=(const AliveCheckReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AliveCheckReq(AliveCheckReq&& from) noexcept
    : AliveCheckReq() {
    *this = ::std::move(from);
  }

  inline AliveCheckReq& operator=(AliveCheckReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AliveCheckReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AliveCheckReq* internal_default_instance() {
    return reinterpret_cast<const AliveCheckReq*>(
               &_AliveCheckReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AliveCheckReq* other);
  friend void swap(AliveCheckReq& a, AliveCheckReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AliveCheckReq* New() const final {
    return CreateMaybeMessage<AliveCheckReq>(nullptr);
  }

  AliveCheckReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AliveCheckReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AliveCheckReq& from);
  void MergeFrom(const AliveCheckReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AliveCheckReq* other);
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::google::protobuf::StringPiece FullMessageName() {
    return "AliveCheck.AliveCheckReq";
  }
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .BasilType.AccessAuthorization auth = 1;
  bool has_auth() const;
  void clear_auth();
  static const int kAuthFieldNumber = 1;
  const ::BasilType::AccessAuthorization& auth() const;
  ::BasilType::AccessAuthorization* release_auth();
  ::BasilType::AccessAuthorization* mutable_auth();
  void set_allocated_auth(::BasilType::AccessAuthorization* auth);

  // uint64 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // int32 sequenceNum = 3;
  void clear_sequencenum();
  static const int kSequenceNumFieldNumber = 3;
  ::google::protobuf::int32 sequencenum() const;
  void set_sequencenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AliveCheck.AliveCheckReq)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::BasilType::AccessAuthorization* auth_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 sequencenum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AliveCheck_2eproto;
};
// -------------------------------------------------------------------

class AliveCheckResp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AliveCheck.AliveCheckResp) */ {
 public:
  AliveCheckResp();
  virtual ~AliveCheckResp();

  AliveCheckResp(const AliveCheckResp& from);

  inline AliveCheckResp& operator=(const AliveCheckResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AliveCheckResp(AliveCheckResp&& from) noexcept
    : AliveCheckResp() {
    *this = ::std::move(from);
  }

  inline AliveCheckResp& operator=(AliveCheckResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AliveCheckResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AliveCheckResp* internal_default_instance() {
    return reinterpret_cast<const AliveCheckResp*>(
               &_AliveCheckResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AliveCheckResp* other);
  friend void swap(AliveCheckResp& a, AliveCheckResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AliveCheckResp* New() const final {
    return CreateMaybeMessage<AliveCheckResp>(nullptr);
  }

  AliveCheckResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AliveCheckResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AliveCheckResp& from);
  void MergeFrom(const AliveCheckResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AliveCheckResp* other);
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::google::protobuf::StringPiece FullMessageName() {
    return "AliveCheck.AliveCheckResp";
  }
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // uint64 timeReceived = 3;
  void clear_timereceived();
  static const int kTimeReceivedFieldNumber = 3;
  ::google::protobuf::uint64 timereceived() const;
  void set_timereceived(::google::protobuf::uint64 value);

  // int32 sequenceNum = 2;
  void clear_sequencenum();
  static const int kSequenceNumFieldNumber = 2;
  ::google::protobuf::int32 sequencenum() const;
  void set_sequencenum(::google::protobuf::int32 value);

  // int32 sequenceNumReceived = 4;
  void clear_sequencenumreceived();
  static const int kSequenceNumReceivedFieldNumber = 4;
  ::google::protobuf::int32 sequencenumreceived() const;
  void set_sequencenumreceived(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AliveCheck.AliveCheckResp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 timereceived_;
  ::google::protobuf::int32 sequencenum_;
  ::google::protobuf::int32 sequencenumreceived_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AliveCheck_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AliveCheckReq

// .BasilType.AccessAuthorization auth = 1;
inline bool AliveCheckReq::has_auth() const {
  return this != internal_default_instance() && auth_ != nullptr;
}
inline const ::BasilType::AccessAuthorization& AliveCheckReq::auth() const {
  const ::BasilType::AccessAuthorization* p = auth_;
  // @@protoc_insertion_point(field_get:AliveCheck.AliveCheckReq.auth)
  return p != nullptr ? *p : *reinterpret_cast<const ::BasilType::AccessAuthorization*>(
      &::BasilType::_AccessAuthorization_default_instance_);
}
inline ::BasilType::AccessAuthorization* AliveCheckReq::release_auth() {
  // @@protoc_insertion_point(field_release:AliveCheck.AliveCheckReq.auth)
  
  ::BasilType::AccessAuthorization* temp = auth_;
  auth_ = nullptr;
  return temp;
}
inline ::BasilType::AccessAuthorization* AliveCheckReq::mutable_auth() {
  
  if (auth_ == nullptr) {
    auto* p = CreateMaybeMessage<::BasilType::AccessAuthorization>(GetArenaNoVirtual());
    auth_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AliveCheck.AliveCheckReq.auth)
  return auth_;
}
inline void AliveCheckReq::set_allocated_auth(::BasilType::AccessAuthorization* auth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auth_);
  }
  if (auth) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      auth = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auth, submessage_arena);
    }
    
  } else {
    
  }
  auth_ = auth;
  // @@protoc_insertion_point(field_set_allocated:AliveCheck.AliveCheckReq.auth)
}

// uint64 time = 2;
inline void AliveCheckReq::clear_time() {
  time_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AliveCheckReq::time() const {
  // @@protoc_insertion_point(field_get:AliveCheck.AliveCheckReq.time)
  return time_;
}
inline void AliveCheckReq::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:AliveCheck.AliveCheckReq.time)
}

// int32 sequenceNum = 3;
inline void AliveCheckReq::clear_sequencenum() {
  sequencenum_ = 0;
}
inline ::google::protobuf::int32 AliveCheckReq::sequencenum() const {
  // @@protoc_insertion_point(field_get:AliveCheck.AliveCheckReq.sequenceNum)
  return sequencenum_;
}
inline void AliveCheckReq::set_sequencenum(::google::protobuf::int32 value) {
  
  sequencenum_ = value;
  // @@protoc_insertion_point(field_set:AliveCheck.AliveCheckReq.sequenceNum)
}

// -------------------------------------------------------------------

// AliveCheckResp

// uint64 time = 1;
inline void AliveCheckResp::clear_time() {
  time_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AliveCheckResp::time() const {
  // @@protoc_insertion_point(field_get:AliveCheck.AliveCheckResp.time)
  return time_;
}
inline void AliveCheckResp::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:AliveCheck.AliveCheckResp.time)
}

// int32 sequenceNum = 2;
inline void AliveCheckResp::clear_sequencenum() {
  sequencenum_ = 0;
}
inline ::google::protobuf::int32 AliveCheckResp::sequencenum() const {
  // @@protoc_insertion_point(field_get:AliveCheck.AliveCheckResp.sequenceNum)
  return sequencenum_;
}
inline void AliveCheckResp::set_sequencenum(::google::protobuf::int32 value) {
  
  sequencenum_ = value;
  // @@protoc_insertion_point(field_set:AliveCheck.AliveCheckResp.sequenceNum)
}

// uint64 timeReceived = 3;
inline void AliveCheckResp::clear_timereceived() {
  timereceived_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AliveCheckResp::timereceived() const {
  // @@protoc_insertion_point(field_get:AliveCheck.AliveCheckResp.timeReceived)
  return timereceived_;
}
inline void AliveCheckResp::set_timereceived(::google::protobuf::uint64 value) {
  
  timereceived_ = value;
  // @@protoc_insertion_point(field_set:AliveCheck.AliveCheckResp.timeReceived)
}

// int32 sequenceNumReceived = 4;
inline void AliveCheckResp::clear_sequencenumreceived() {
  sequencenumreceived_ = 0;
}
inline ::google::protobuf::int32 AliveCheckResp::sequencenumreceived() const {
  // @@protoc_insertion_point(field_get:AliveCheck.AliveCheckResp.sequenceNumReceived)
  return sequencenumreceived_;
}
inline void AliveCheckResp::set_sequencenumreceived(::google::protobuf::int32 value) {
  
  sequencenumreceived_ = value;
  // @@protoc_insertion_point(field_set:AliveCheck.AliveCheckResp.sequenceNumReceived)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AliveCheck

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_AliveCheck_2eproto
