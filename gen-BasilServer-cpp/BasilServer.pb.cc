// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasilServer.proto

#include "BasilServer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_BasilServer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_BasilServer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilServer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_BasilServer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilServer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilServer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilServer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateInstancePropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilServer_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateObjectPropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AaBoundingBox_BasilTypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AccessAuthorization_BasilTypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AssetInformation_BasilTypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BasilException_BasilTypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InstanceIdentifier_BasilTypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_InstancePositionInfo_BasilTypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_BasilTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectIdentifier_BasilTypes_2eproto;
namespace BasilServer {
class IdentifyDisplayableObjectReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IdentifyDisplayableObjectReq> _instance;
} _IdentifyDisplayableObjectReq_default_instance_;
class IdentifyDisplayableObjectRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IdentifyDisplayableObjectResp> _instance;
} _IdentifyDisplayableObjectResp_default_instance_;
class ForgetDisplayableObjectReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ForgetDisplayableObjectReq> _instance;
} _ForgetDisplayableObjectReq_default_instance_;
class ForgetDisplayableObjectRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ForgetDisplayableObjectResp> _instance;
} _ForgetDisplayableObjectResp_default_instance_;
class CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse> _instance;
} _CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_default_instance_;
class CreateObjectInstanceReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectInstanceReq> _instance;
} _CreateObjectInstanceReq_default_instance_;
class CreateObjectInstanceRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectInstanceResp> _instance;
} _CreateObjectInstanceResp_default_instance_;
class DeleteObjectInstanceReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectInstanceReq> _instance;
} _DeleteObjectInstanceReq_default_instance_;
class DeleteObjectInstanceRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteObjectInstanceResp> _instance;
} _DeleteObjectInstanceResp_default_instance_;
class UpdateObjectPropertyReq_PropsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectPropertyReq_PropsEntry_DoNotUse> _instance;
} _UpdateObjectPropertyReq_PropsEntry_DoNotUse_default_instance_;
class UpdateObjectPropertyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectPropertyReq> _instance;
} _UpdateObjectPropertyReq_default_instance_;
class UpdateObjectPropertyRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateObjectPropertyResp> _instance;
} _UpdateObjectPropertyResp_default_instance_;
class UpdateInstancePropertyReq_PropsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateInstancePropertyReq_PropsEntry_DoNotUse> _instance;
} _UpdateInstancePropertyReq_PropsEntry_DoNotUse_default_instance_;
class UpdateInstancePropertyReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateInstancePropertyReq> _instance;
} _UpdateInstancePropertyReq_default_instance_;
class UpdateInstancePropertyRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateInstancePropertyResp> _instance;
} _UpdateInstancePropertyResp_default_instance_;
class UpdateInstancePositionReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateInstancePositionReq> _instance;
} _UpdateInstancePositionReq_default_instance_;
class UpdateInstancePositionRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateInstancePositionResp> _instance;
} _UpdateInstancePositionResp_default_instance_;
class RequestObjectPropertiesReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestObjectPropertiesReq> _instance;
} _RequestObjectPropertiesReq_default_instance_;
class RequestObjectPropertiesResp_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestObjectPropertiesResp_PropertiesEntry_DoNotUse> _instance;
} _RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_default_instance_;
class RequestObjectPropertiesRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestObjectPropertiesResp> _instance;
} _RequestObjectPropertiesResp_default_instance_;
class RequestInstancePropertiesReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestInstancePropertiesReq> _instance;
} _RequestInstancePropertiesReq_default_instance_;
class RequestInstancePropertiesResp_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestInstancePropertiesResp_PropertiesEntry_DoNotUse> _instance;
} _RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_default_instance_;
class RequestInstancePropertiesRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestInstancePropertiesResp> _instance;
} _RequestInstancePropertiesResp_default_instance_;
class CloseSessionReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloseSessionReq> _instance;
} _CloseSessionReq_default_instance_;
class CloseSessionRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloseSessionResp> _instance;
} _CloseSessionResp_default_instance_;
class MakeConnectionReq_ConnectionParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MakeConnectionReq_ConnectionParamsEntry_DoNotUse> _instance;
} _MakeConnectionReq_ConnectionParamsEntry_DoNotUse_default_instance_;
class MakeConnectionReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MakeConnectionReq> _instance;
} _MakeConnectionReq_default_instance_;
class MakeConnectionRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MakeConnectionResp> _instance;
} _MakeConnectionResp_default_instance_;
class AliveCheckReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AliveCheckReq> _instance;
} _AliveCheckReq_default_instance_;
class AliveCheckRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AliveCheckResp> _instance;
} _AliveCheckResp_default_instance_;
}  // namespace BasilServer
static void InitDefaultsscc_info_AliveCheckReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_AliveCheckReq_default_instance_;
    new (ptr) ::BasilServer::AliveCheckReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::AliveCheckReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AliveCheckReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_AliveCheckReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_AliveCheckResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_AliveCheckResp_default_instance_;
    new (ptr) ::BasilServer::AliveCheckResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::AliveCheckResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AliveCheckResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AliveCheckResp_BasilServer_2eproto}, {}};

static void InitDefaultsscc_info_CloseSessionReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_CloseSessionReq_default_instance_;
    new (ptr) ::BasilServer::CloseSessionReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::CloseSessionReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CloseSessionReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_CloseSessionReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_CloseSessionResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_CloseSessionResp_default_instance_;
    new (ptr) ::BasilServer::CloseSessionResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::CloseSessionResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CloseSessionResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_CloseSessionResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_CreateObjectInstanceReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_CreateObjectInstanceReq_default_instance_;
    new (ptr) ::BasilServer::CreateObjectInstanceReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::CreateObjectInstanceReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_CreateObjectInstanceReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsscc_info_CreateObjectInstanceReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_ObjectIdentifier_BasilTypes_2eproto.base,
      &scc_info_InstanceIdentifier_BasilTypes_2eproto.base,
      &scc_info_InstancePositionInfo_BasilTypes_2eproto.base,
      &scc_info_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_BasilServer_2eproto.base,}};

static void InitDefaultsscc_info_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_default_instance_;
    new (ptr) ::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse();
  }
  ::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_BasilServer_2eproto}, {}};

static void InitDefaultsscc_info_CreateObjectInstanceResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_CreateObjectInstanceResp_default_instance_;
    new (ptr) ::BasilServer::CreateObjectInstanceResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::CreateObjectInstanceResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CreateObjectInstanceResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_CreateObjectInstanceResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,
      &scc_info_InstanceIdentifier_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_DeleteObjectInstanceReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_DeleteObjectInstanceReq_default_instance_;
    new (ptr) ::BasilServer::DeleteObjectInstanceReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::DeleteObjectInstanceReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DeleteObjectInstanceReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_DeleteObjectInstanceReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_InstanceIdentifier_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_DeleteObjectInstanceResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_DeleteObjectInstanceResp_default_instance_;
    new (ptr) ::BasilServer::DeleteObjectInstanceResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::DeleteObjectInstanceResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteObjectInstanceResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DeleteObjectInstanceResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_ForgetDisplayableObjectReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_ForgetDisplayableObjectReq_default_instance_;
    new (ptr) ::BasilServer::ForgetDisplayableObjectReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::ForgetDisplayableObjectReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ForgetDisplayableObjectReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_ForgetDisplayableObjectReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_ObjectIdentifier_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_ForgetDisplayableObjectResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_ForgetDisplayableObjectResp_default_instance_;
    new (ptr) ::BasilServer::ForgetDisplayableObjectResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::ForgetDisplayableObjectResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ForgetDisplayableObjectResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ForgetDisplayableObjectResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_IdentifyDisplayableObjectReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_IdentifyDisplayableObjectReq_default_instance_;
    new (ptr) ::BasilServer::IdentifyDisplayableObjectReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::IdentifyDisplayableObjectReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_IdentifyDisplayableObjectReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsscc_info_IdentifyDisplayableObjectReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_AssetInformation_BasilTypes_2eproto.base,
      &scc_info_ObjectIdentifier_BasilTypes_2eproto.base,
      &scc_info_AaBoundingBox_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_IdentifyDisplayableObjectResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_IdentifyDisplayableObjectResp_default_instance_;
    new (ptr) ::BasilServer::IdentifyDisplayableObjectResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::IdentifyDisplayableObjectResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IdentifyDisplayableObjectResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_IdentifyDisplayableObjectResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,
      &scc_info_ObjectIdentifier_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_MakeConnectionReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_MakeConnectionReq_default_instance_;
    new (ptr) ::BasilServer::MakeConnectionReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::MakeConnectionReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MakeConnectionReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_MakeConnectionReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_BasilServer_2eproto.base,}};

static void InitDefaultsscc_info_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse();
  }
  ::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_BasilServer_2eproto}, {}};

static void InitDefaultsscc_info_MakeConnectionResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_MakeConnectionResp_default_instance_;
    new (ptr) ::BasilServer::MakeConnectionResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::MakeConnectionResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MakeConnectionResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_MakeConnectionResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_RequestInstancePropertiesReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_RequestInstancePropertiesReq_default_instance_;
    new (ptr) ::BasilServer::RequestInstancePropertiesReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::RequestInstancePropertiesReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestInstancePropertiesReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_RequestInstancePropertiesReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_InstanceIdentifier_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_RequestInstancePropertiesResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_RequestInstancePropertiesResp_default_instance_;
    new (ptr) ::BasilServer::RequestInstancePropertiesResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::RequestInstancePropertiesResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestInstancePropertiesResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_RequestInstancePropertiesResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,
      &scc_info_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto.base,}};

static void InitDefaultsscc_info_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse();
  }
  ::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto}, {}};

static void InitDefaultsscc_info_RequestObjectPropertiesReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_RequestObjectPropertiesReq_default_instance_;
    new (ptr) ::BasilServer::RequestObjectPropertiesReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::RequestObjectPropertiesReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestObjectPropertiesReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_RequestObjectPropertiesReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_ObjectIdentifier_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_RequestObjectPropertiesResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_RequestObjectPropertiesResp_default_instance_;
    new (ptr) ::BasilServer::RequestObjectPropertiesResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::RequestObjectPropertiesResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestObjectPropertiesResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_RequestObjectPropertiesResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,
      &scc_info_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto.base,}};

static void InitDefaultsscc_info_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse();
  }
  ::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto}, {}};

static void InitDefaultsscc_info_UpdateInstancePositionReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateInstancePositionReq_default_instance_;
    new (ptr) ::BasilServer::UpdateInstancePositionReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::UpdateInstancePositionReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_UpdateInstancePositionReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_UpdateInstancePositionReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_InstanceIdentifier_BasilTypes_2eproto.base,
      &scc_info_InstancePositionInfo_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_UpdateInstancePositionResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateInstancePositionResp_default_instance_;
    new (ptr) ::BasilServer::UpdateInstancePositionResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::UpdateInstancePositionResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateInstancePositionResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_UpdateInstancePositionResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_UpdateInstancePropertyReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateInstancePropertyReq_default_instance_;
    new (ptr) ::BasilServer::UpdateInstancePropertyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::UpdateInstancePropertyReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_UpdateInstancePropertyReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_UpdateInstancePropertyReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_InstanceIdentifier_BasilTypes_2eproto.base,
      &scc_info_UpdateInstancePropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto.base,}};

static void InitDefaultsscc_info_UpdateInstancePropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateInstancePropertyReq_PropsEntry_DoNotUse_default_instance_;
    new (ptr) ::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse();
  }
  ::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateInstancePropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_UpdateInstancePropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto}, {}};

static void InitDefaultsscc_info_UpdateInstancePropertyResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateInstancePropertyResp_default_instance_;
    new (ptr) ::BasilServer::UpdateInstancePropertyResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::UpdateInstancePropertyResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateInstancePropertyResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_UpdateInstancePropertyResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,}};

static void InitDefaultsscc_info_UpdateObjectPropertyReq_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateObjectPropertyReq_default_instance_;
    new (ptr) ::BasilServer::UpdateObjectPropertyReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::UpdateObjectPropertyReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_UpdateObjectPropertyReq_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsscc_info_UpdateObjectPropertyReq_BasilServer_2eproto}, {
      &scc_info_AccessAuthorization_BasilTypes_2eproto.base,
      &scc_info_ObjectIdentifier_BasilTypes_2eproto.base,
      &scc_info_UpdateObjectPropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto.base,}};

static void InitDefaultsscc_info_UpdateObjectPropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateObjectPropertyReq_PropsEntry_DoNotUse_default_instance_;
    new (ptr) ::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse();
  }
  ::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpdateObjectPropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_UpdateObjectPropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto}, {}};

static void InitDefaultsscc_info_UpdateObjectPropertyResp_BasilServer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::BasilServer::_UpdateObjectPropertyResp_default_instance_;
    new (ptr) ::BasilServer::UpdateObjectPropertyResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BasilServer::UpdateObjectPropertyResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateObjectPropertyResp_BasilServer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_UpdateObjectPropertyResp_BasilServer_2eproto}, {
      &scc_info_BasilException_BasilTypes_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_BasilServer_2eproto[30];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_BasilServer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_BasilServer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_BasilServer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectReq, assetinfo_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectReq, objectid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectReq, aabb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::IdentifyDisplayableObjectResp, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::ForgetDisplayableObjectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::ForgetDisplayableObjectReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::ForgetDisplayableObjectReq, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::ForgetDisplayableObjectResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::ForgetDisplayableObjectResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq, objectid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq, instanceid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq, pos_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq, propertiestoset_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceReq, instancecounthint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CreateObjectInstanceResp, instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::DeleteObjectInstanceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::DeleteObjectInstanceReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::DeleteObjectInstanceReq, instanceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::DeleteObjectInstanceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::DeleteObjectInstanceResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq, objectid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyReq, props_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateObjectPropertyResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq, instanceid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyReq, props_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePropertyResp, exception_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePositionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePositionReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePositionReq, instanceid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePositionReq, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePositionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::UpdateInstancePositionResp, exception_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesReq, objectid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesReq, propertymatch_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestObjectPropertiesResp, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesReq, instanceid_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesReq, propertymatch_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::RequestInstancePropertiesResp, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CloseSessionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CloseSessionReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::CloseSessionReq, reason_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CloseSessionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::CloseSessionResp, exception_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionReq, connectionparams_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::MakeConnectionResp, exception_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckReq, auth_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckReq, time_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckReq, sequencenum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckResp, time_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckResp, sequencenum_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckResp, timereceived_),
  PROTOBUF_FIELD_OFFSET(::BasilServer::AliveCheckResp, sequencenumreceived_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::BasilServer::IdentifyDisplayableObjectReq)},
  { 9, -1, sizeof(::BasilServer::IdentifyDisplayableObjectResp)},
  { 16, -1, sizeof(::BasilServer::ForgetDisplayableObjectReq)},
  { 23, -1, sizeof(::BasilServer::ForgetDisplayableObjectResp)},
  { 29, 36, sizeof(::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse)},
  { 38, -1, sizeof(::BasilServer::CreateObjectInstanceReq)},
  { 49, -1, sizeof(::BasilServer::CreateObjectInstanceResp)},
  { 56, -1, sizeof(::BasilServer::DeleteObjectInstanceReq)},
  { 63, -1, sizeof(::BasilServer::DeleteObjectInstanceResp)},
  { 69, 76, sizeof(::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse)},
  { 78, -1, sizeof(::BasilServer::UpdateObjectPropertyReq)},
  { 86, -1, sizeof(::BasilServer::UpdateObjectPropertyResp)},
  { 92, 99, sizeof(::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse)},
  { 101, -1, sizeof(::BasilServer::UpdateInstancePropertyReq)},
  { 109, -1, sizeof(::BasilServer::UpdateInstancePropertyResp)},
  { 115, -1, sizeof(::BasilServer::UpdateInstancePositionReq)},
  { 123, -1, sizeof(::BasilServer::UpdateInstancePositionResp)},
  { 129, -1, sizeof(::BasilServer::RequestObjectPropertiesReq)},
  { 137, 144, sizeof(::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse)},
  { 146, -1, sizeof(::BasilServer::RequestObjectPropertiesResp)},
  { 153, -1, sizeof(::BasilServer::RequestInstancePropertiesReq)},
  { 161, 168, sizeof(::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse)},
  { 170, -1, sizeof(::BasilServer::RequestInstancePropertiesResp)},
  { 177, -1, sizeof(::BasilServer::CloseSessionReq)},
  { 184, -1, sizeof(::BasilServer::CloseSessionResp)},
  { 190, 197, sizeof(::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse)},
  { 199, -1, sizeof(::BasilServer::MakeConnectionReq)},
  { 206, -1, sizeof(::BasilServer::MakeConnectionResp)},
  { 212, -1, sizeof(::BasilServer::AliveCheckReq)},
  { 220, -1, sizeof(::BasilServer::AliveCheckResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_IdentifyDisplayableObjectReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_IdentifyDisplayableObjectResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_ForgetDisplayableObjectReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_ForgetDisplayableObjectResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_CreateObjectInstanceReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_CreateObjectInstanceResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_DeleteObjectInstanceReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_DeleteObjectInstanceResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateObjectPropertyReq_PropsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateObjectPropertyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateObjectPropertyResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateInstancePropertyReq_PropsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateInstancePropertyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateInstancePropertyResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateInstancePositionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_UpdateInstancePositionResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_RequestObjectPropertiesReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_RequestObjectPropertiesResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_RequestInstancePropertiesReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_RequestInstancePropertiesResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_CloseSessionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_CloseSessionResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_MakeConnectionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_MakeConnectionResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_AliveCheckReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::BasilServer::_AliveCheckResp_default_instance_),
};

const char descriptor_table_protodef_BasilServer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021BasilServer.proto\022\013BasilServer\032\020BasilT"
  "ypes.proto\"\323\001\n\034IdentifyDisplayableObject"
  "Req\022,\n\004auth\030\001 \001(\0132\036.BasilType.AccessAuth"
  "orization\022.\n\tassetInfo\030\002 \001(\0132\033.BasilType"
  ".AssetInformation\022-\n\010objectId\030\003 \001(\0132\033.Ba"
  "silType.ObjectIdentifier\022&\n\004aabb\030\004 \001(\0132\030"
  ".BasilType.AaBoundingBox\"|\n\035IdentifyDisp"
  "layableObjectResp\022,\n\texception\030\001 \001(\0132\031.B"
  "asilType.BasilException\022-\n\010objectId\030\002 \001("
  "\0132\033.BasilType.ObjectIdentifier\"y\n\032Forget"
  "DisplayableObjectReq\022,\n\004auth\030\001 \001(\0132\036.Bas"
  "ilType.AccessAuthorization\022-\n\010objectId\030\002"
  " \001(\0132\033.BasilType.ObjectIdentifier\"K\n\033For"
  "getDisplayableObjectResp\022,\n\texception\030\001 "
  "\001(\0132\031.BasilType.BasilException\"\376\002\n\027Creat"
  "eObjectInstanceReq\022,\n\004auth\030\001 \001(\0132\036.Basil"
  "Type.AccessAuthorization\022-\n\010objectId\030\002 \001"
  "(\0132\033.BasilType.ObjectIdentifier\0221\n\ninsta"
  "nceId\030\003 \001(\0132\035.BasilType.InstanceIdentifi"
  "er\022,\n\003pos\030\004 \001(\0132\037.BasilType.InstancePosi"
  "tionInfo\022R\n\017propertiesToSet\030\005 \003(\01329.Basi"
  "lServer.CreateObjectInstanceReq.Properti"
  "esToSetEntry\022\031\n\021InstanceCountHint\030\006 \001(\005\032"
  "6\n\024PropertiesToSetEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
  "value\030\002 \001(\t:\0028\001\"{\n\030CreateObjectInstanceR"
  "esp\022,\n\texception\030\001 \001(\0132\031.BasilType.Basil"
  "Exception\0221\n\ninstanceId\030\002 \001(\0132\035.BasilTyp"
  "e.InstanceIdentifier\"z\n\027DeleteObjectInst"
  "anceReq\022,\n\004auth\030\001 \001(\0132\036.BasilType.Access"
  "Authorization\0221\n\ninstanceId\030\002 \001(\0132\035.Basi"
  "lType.InstanceIdentifier\"H\n\030DeleteObject"
  "InstanceResp\022,\n\texception\030\001 \001(\0132\031.BasilT"
  "ype.BasilException\"\344\001\n\027UpdateObjectPrope"
  "rtyReq\022,\n\004auth\030\001 \001(\0132\036.BasilType.AccessA"
  "uthorization\022-\n\010objectId\030\002 \001(\0132\033.BasilTy"
  "pe.ObjectIdentifier\022>\n\005props\030\003 \003(\0132/.Bas"
  "ilServer.UpdateObjectPropertyReq.PropsEn"
  "try\032,\n\nPropsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001\"H\n\030UpdateObjectPropertyResp\022,\n"
  "\texception\030\001 \001(\0132\031.BasilType.BasilExcept"
  "ion\"\354\001\n\031UpdateInstancePropertyReq\022,\n\004aut"
  "h\030\001 \001(\0132\036.BasilType.AccessAuthorization\022"
  "1\n\ninstanceId\030\002 \001(\0132\035.BasilType.Instance"
  "Identifier\022@\n\005props\030\003 \003(\01321.BasilServer."
  "UpdateInstancePropertyReq.PropsEntry\032,\n\n"
  "PropsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
  "8\001\"J\n\032UpdateInstancePropertyResp\022,\n\texce"
  "ption\030\001 \001(\0132\031.BasilType.BasilException\"\252"
  "\001\n\031UpdateInstancePositionReq\022,\n\004auth\030\001 \001"
  "(\0132\036.BasilType.AccessAuthorization\0221\n\nin"
  "stanceId\030\002 \001(\0132\035.BasilType.InstanceIdent"
  "ifier\022,\n\003pos\030\003 \001(\0132\037.BasilType.InstanceP"
  "ositionInfo\"J\n\032UpdateInstancePositionRes"
  "p\022,\n\texception\030\001 \001(\0132\031.BasilType.BasilEx"
  "ception\"\220\001\n\032RequestObjectPropertiesReq\022,"
  "\n\004auth\030\001 \001(\0132\036.BasilType.AccessAuthoriza"
  "tion\022-\n\010objectId\030\002 \001(\0132\033.BasilType.Objec"
  "tIdentifier\022\025\n\rpropertyMatch\030\003 \001(\t\"\314\001\n\033R"
  "equestObjectPropertiesResp\022,\n\texception\030"
  "\001 \001(\0132\031.BasilType.BasilException\022L\n\nprop"
  "erties\030\002 \003(\01328.BasilServer.RequestObject"
  "PropertiesResp.PropertiesEntry\0321\n\017Proper"
  "tiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
  "\001\"\226\001\n\034RequestInstancePropertiesReq\022,\n\004au"
  "th\030\001 \001(\0132\036.BasilType.AccessAuthorization"
  "\0221\n\ninstanceId\030\002 \001(\0132\035.BasilType.Instanc"
  "eIdentifier\022\025\n\rpropertyMatch\030\003 \001(\t\"\320\001\n\035R"
  "equestInstancePropertiesResp\022,\n\texceptio"
  "n\030\001 \001(\0132\031.BasilType.BasilException\022N\n\npr"
  "operties\030\002 \003(\0132:.BasilServer.RequestInst"
  "ancePropertiesResp.PropertiesEntry\0321\n\017Pr"
  "opertiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
  "\t:\0028\001\"O\n\017CloseSessionReq\022,\n\004auth\030\001 \001(\0132\036"
  ".BasilType.AccessAuthorization\022\016\n\006reason"
  "\030\002 \001(\t\"@\n\020CloseSessionResp\022,\n\texception\030"
  "\001 \001(\0132\031.BasilType.BasilException\"\312\001\n\021Mak"
  "eConnectionReq\022,\n\004auth\030\001 \001(\0132\036.BasilType"
  ".AccessAuthorization\022N\n\020connectionParams"
  "\030\002 \003(\01324.BasilServer.MakeConnectionReq.C"
  "onnectionParamsEntry\0327\n\025ConnectionParams"
  "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"B\n"
  "\022MakeConnectionResp\022,\n\texception\030\001 \001(\0132\031"
  ".BasilType.BasilException\"`\n\rAliveCheckR"
  "eq\022,\n\004auth\030\001 \001(\0132\036.BasilType.AccessAutho"
  "rization\022\014\n\004time\030\002 \001(\004\022\023\n\013sequenceNum\030\003 "
  "\001(\005\"f\n\016AliveCheckResp\022\014\n\004time\030\001 \001(\004\022\023\n\013s"
  "equenceNum\030\002 \001(\005\022\024\n\014timeReceived\030\003 \001(\004\022\033"
  "\n\023sequenceNumReceived\030\004 \001(\0052\352\007\n\013BasilSer"
  "ver\022r\n\031IdentifyDisplayableObject\022).Basil"
  "Server.IdentifyDisplayableObjectReq\032*.Ba"
  "silServer.IdentifyDisplayableObjectResp\022"
  "c\n\024CreateObjectInstance\022$.BasilServer.Cr"
  "eateObjectInstanceReq\032%.BasilServer.Crea"
  "teObjectInstanceResp\022c\n\024UpdateObjectProp"
  "erty\022$.BasilServer.UpdateObjectPropertyR"
  "eq\032%.BasilServer.UpdateObjectPropertyRes"
  "p\022i\n\026UpdateInstanceProperty\022&.BasilServe"
  "r.UpdateInstancePropertyReq\032\'.BasilServe"
  "r.UpdateInstancePropertyResp\022i\n\026UpdateIn"
  "stancePosition\022&.BasilServer.UpdateInsta"
  "ncePositionReq\032\'.BasilServer.UpdateInsta"
  "ncePositionResp\022l\n\027RequestObjectProperti"
  "es\022\'.BasilServer.RequestObjectProperties"
  "Req\032(.BasilServer.RequestObjectPropertie"
  "sResp\022r\n\031RequestInstanceProperties\022).Bas"
  "ilServer.RequestInstancePropertiesReq\032*."
  "BasilServer.RequestInstancePropertiesRes"
  "p\022K\n\014CloseSession\022\034.BasilServer.CloseSes"
  "sionReq\032\035.BasilServer.CloseSessionResp\022Q"
  "\n\016MakeConnection\022\036.BasilServer.MakeConne"
  "ctionReq\032\037.BasilServer.MakeConnectionRes"
  "p\022E\n\nAliveCheck\022\032.BasilServer.AliveCheck"
  "Req\032\033.BasilServer.AliveCheckRespB*\252\002\'org"
  ".herbal3d.basil.protocol.BasilServerb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_BasilServer_2eproto_deps[1] = {
  &::descriptor_table_BasilTypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_BasilServer_2eproto_sccs[30] = {
  &scc_info_AliveCheckReq_BasilServer_2eproto.base,
  &scc_info_AliveCheckResp_BasilServer_2eproto.base,
  &scc_info_CloseSessionReq_BasilServer_2eproto.base,
  &scc_info_CloseSessionResp_BasilServer_2eproto.base,
  &scc_info_CreateObjectInstanceReq_BasilServer_2eproto.base,
  &scc_info_CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse_BasilServer_2eproto.base,
  &scc_info_CreateObjectInstanceResp_BasilServer_2eproto.base,
  &scc_info_DeleteObjectInstanceReq_BasilServer_2eproto.base,
  &scc_info_DeleteObjectInstanceResp_BasilServer_2eproto.base,
  &scc_info_ForgetDisplayableObjectReq_BasilServer_2eproto.base,
  &scc_info_ForgetDisplayableObjectResp_BasilServer_2eproto.base,
  &scc_info_IdentifyDisplayableObjectReq_BasilServer_2eproto.base,
  &scc_info_IdentifyDisplayableObjectResp_BasilServer_2eproto.base,
  &scc_info_MakeConnectionReq_BasilServer_2eproto.base,
  &scc_info_MakeConnectionReq_ConnectionParamsEntry_DoNotUse_BasilServer_2eproto.base,
  &scc_info_MakeConnectionResp_BasilServer_2eproto.base,
  &scc_info_RequestInstancePropertiesReq_BasilServer_2eproto.base,
  &scc_info_RequestInstancePropertiesResp_BasilServer_2eproto.base,
  &scc_info_RequestInstancePropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto.base,
  &scc_info_RequestObjectPropertiesReq_BasilServer_2eproto.base,
  &scc_info_RequestObjectPropertiesResp_BasilServer_2eproto.base,
  &scc_info_RequestObjectPropertiesResp_PropertiesEntry_DoNotUse_BasilServer_2eproto.base,
  &scc_info_UpdateInstancePositionReq_BasilServer_2eproto.base,
  &scc_info_UpdateInstancePositionResp_BasilServer_2eproto.base,
  &scc_info_UpdateInstancePropertyReq_BasilServer_2eproto.base,
  &scc_info_UpdateInstancePropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto.base,
  &scc_info_UpdateInstancePropertyResp_BasilServer_2eproto.base,
  &scc_info_UpdateObjectPropertyReq_BasilServer_2eproto.base,
  &scc_info_UpdateObjectPropertyReq_PropsEntry_DoNotUse_BasilServer_2eproto.base,
  &scc_info_UpdateObjectPropertyResp_BasilServer_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_BasilServer_2eproto_once;
static bool descriptor_table_BasilServer_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_BasilServer_2eproto = {
  &descriptor_table_BasilServer_2eproto_initialized, descriptor_table_protodef_BasilServer_2eproto, "BasilServer.proto", 4564,
  &descriptor_table_BasilServer_2eproto_once, descriptor_table_BasilServer_2eproto_sccs, descriptor_table_BasilServer_2eproto_deps, 30, 1,
  schemas, file_default_instances, TableStruct_BasilServer_2eproto::offsets,
  file_level_metadata_BasilServer_2eproto, 30, file_level_enum_descriptors_BasilServer_2eproto, file_level_service_descriptors_BasilServer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_BasilServer_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_BasilServer_2eproto), true);
namespace BasilServer {

// ===================================================================

void IdentifyDisplayableObjectReq::InitAsDefaultInstance() {
  ::BasilServer::_IdentifyDisplayableObjectReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_IdentifyDisplayableObjectReq_default_instance_._instance.get_mutable()->assetinfo_ = const_cast< ::BasilType::AssetInformation*>(
      ::BasilType::AssetInformation::internal_default_instance());
  ::BasilServer::_IdentifyDisplayableObjectReq_default_instance_._instance.get_mutable()->objectid_ = const_cast< ::BasilType::ObjectIdentifier*>(
      ::BasilType::ObjectIdentifier::internal_default_instance());
  ::BasilServer::_IdentifyDisplayableObjectReq_default_instance_._instance.get_mutable()->aabb_ = const_cast< ::BasilType::AaBoundingBox*>(
      ::BasilType::AaBoundingBox::internal_default_instance());
}
class IdentifyDisplayableObjectReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const IdentifyDisplayableObjectReq* msg);
  static const ::BasilType::AssetInformation& assetinfo(const IdentifyDisplayableObjectReq* msg);
  static const ::BasilType::ObjectIdentifier& objectid(const IdentifyDisplayableObjectReq* msg);
  static const ::BasilType::AaBoundingBox& aabb(const IdentifyDisplayableObjectReq* msg);
};

const ::BasilType::AccessAuthorization&
IdentifyDisplayableObjectReq::HasBitSetters::auth(const IdentifyDisplayableObjectReq* msg) {
  return *msg->auth_;
}
const ::BasilType::AssetInformation&
IdentifyDisplayableObjectReq::HasBitSetters::assetinfo(const IdentifyDisplayableObjectReq* msg) {
  return *msg->assetinfo_;
}
const ::BasilType::ObjectIdentifier&
IdentifyDisplayableObjectReq::HasBitSetters::objectid(const IdentifyDisplayableObjectReq* msg) {
  return *msg->objectid_;
}
const ::BasilType::AaBoundingBox&
IdentifyDisplayableObjectReq::HasBitSetters::aabb(const IdentifyDisplayableObjectReq* msg) {
  return *msg->aabb_;
}
void IdentifyDisplayableObjectReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void IdentifyDisplayableObjectReq::clear_assetinfo() {
  if (GetArenaNoVirtual() == nullptr && assetinfo_ != nullptr) {
    delete assetinfo_;
  }
  assetinfo_ = nullptr;
}
void IdentifyDisplayableObjectReq::clear_objectid() {
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
}
void IdentifyDisplayableObjectReq::clear_aabb() {
  if (GetArenaNoVirtual() == nullptr && aabb_ != nullptr) {
    delete aabb_;
  }
  aabb_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentifyDisplayableObjectReq::kAuthFieldNumber;
const int IdentifyDisplayableObjectReq::kAssetInfoFieldNumber;
const int IdentifyDisplayableObjectReq::kObjectIdFieldNumber;
const int IdentifyDisplayableObjectReq::kAabbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentifyDisplayableObjectReq::IdentifyDisplayableObjectReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.IdentifyDisplayableObjectReq)
}
IdentifyDisplayableObjectReq::IdentifyDisplayableObjectReq(const IdentifyDisplayableObjectReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_assetinfo()) {
    assetinfo_ = new ::BasilType::AssetInformation(*from.assetinfo_);
  } else {
    assetinfo_ = nullptr;
  }
  if (from.has_objectid()) {
    objectid_ = new ::BasilType::ObjectIdentifier(*from.objectid_);
  } else {
    objectid_ = nullptr;
  }
  if (from.has_aabb()) {
    aabb_ = new ::BasilType::AaBoundingBox(*from.aabb_);
  } else {
    aabb_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.IdentifyDisplayableObjectReq)
}

void IdentifyDisplayableObjectReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IdentifyDisplayableObjectReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aabb_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(aabb_));
}

IdentifyDisplayableObjectReq::~IdentifyDisplayableObjectReq() {
  // @@protoc_insertion_point(destructor:BasilServer.IdentifyDisplayableObjectReq)
  SharedDtor();
}

void IdentifyDisplayableObjectReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete assetinfo_;
  if (this != internal_default_instance()) delete objectid_;
  if (this != internal_default_instance()) delete aabb_;
}

void IdentifyDisplayableObjectReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdentifyDisplayableObjectReq& IdentifyDisplayableObjectReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IdentifyDisplayableObjectReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void IdentifyDisplayableObjectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.IdentifyDisplayableObjectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && assetinfo_ != nullptr) {
    delete assetinfo_;
  }
  assetinfo_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && aabb_ != nullptr) {
    delete aabb_;
  }
  aabb_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IdentifyDisplayableObjectReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.AssetInformation assetInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_assetinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.ObjectIdentifier objectId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_objectid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.AaBoundingBox aabb = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_aabb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IdentifyDisplayableObjectReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.IdentifyDisplayableObjectReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.AssetInformation assetInfo = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_assetinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.ObjectIdentifier objectId = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_objectid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.AaBoundingBox aabb = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_aabb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.IdentifyDisplayableObjectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.IdentifyDisplayableObjectReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IdentifyDisplayableObjectReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.IdentifyDisplayableObjectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.AssetInformation assetInfo = 2;
  if (this->has_assetinfo()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::assetinfo(this), output);
  }

  // .BasilType.ObjectIdentifier objectId = 3;
  if (this->has_objectid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::objectid(this), output);
  }

  // .BasilType.AaBoundingBox aabb = 4;
  if (this->has_aabb()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::aabb(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.IdentifyDisplayableObjectReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* IdentifyDisplayableObjectReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.IdentifyDisplayableObjectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.AssetInformation assetInfo = 2;
  if (this->has_assetinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::assetinfo(this), target);
  }

  // .BasilType.ObjectIdentifier objectId = 3;
  if (this->has_objectid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::objectid(this), target);
  }

  // .BasilType.AaBoundingBox aabb = 4;
  if (this->has_aabb()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::aabb(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.IdentifyDisplayableObjectReq)
  return target;
}

size_t IdentifyDisplayableObjectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.IdentifyDisplayableObjectReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.AssetInformation assetInfo = 2;
  if (this->has_assetinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *assetinfo_);
  }

  // .BasilType.ObjectIdentifier objectId = 3;
  if (this->has_objectid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectid_);
  }

  // .BasilType.AaBoundingBox aabb = 4;
  if (this->has_aabb()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *aabb_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdentifyDisplayableObjectReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.IdentifyDisplayableObjectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentifyDisplayableObjectReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IdentifyDisplayableObjectReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.IdentifyDisplayableObjectReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.IdentifyDisplayableObjectReq)
    MergeFrom(*source);
  }
}

void IdentifyDisplayableObjectReq::MergeFrom(const IdentifyDisplayableObjectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.IdentifyDisplayableObjectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_assetinfo()) {
    mutable_assetinfo()->::BasilType::AssetInformation::MergeFrom(from.assetinfo());
  }
  if (from.has_objectid()) {
    mutable_objectid()->::BasilType::ObjectIdentifier::MergeFrom(from.objectid());
  }
  if (from.has_aabb()) {
    mutable_aabb()->::BasilType::AaBoundingBox::MergeFrom(from.aabb());
  }
}

void IdentifyDisplayableObjectReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.IdentifyDisplayableObjectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifyDisplayableObjectReq::CopyFrom(const IdentifyDisplayableObjectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.IdentifyDisplayableObjectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifyDisplayableObjectReq::IsInitialized() const {
  return true;
}

void IdentifyDisplayableObjectReq::Swap(IdentifyDisplayableObjectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentifyDisplayableObjectReq::InternalSwap(IdentifyDisplayableObjectReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
  swap(assetinfo_, other->assetinfo_);
  swap(objectid_, other->objectid_);
  swap(aabb_, other->aabb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IdentifyDisplayableObjectReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IdentifyDisplayableObjectResp::InitAsDefaultInstance() {
  ::BasilServer::_IdentifyDisplayableObjectResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
  ::BasilServer::_IdentifyDisplayableObjectResp_default_instance_._instance.get_mutable()->objectid_ = const_cast< ::BasilType::ObjectIdentifier*>(
      ::BasilType::ObjectIdentifier::internal_default_instance());
}
class IdentifyDisplayableObjectResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const IdentifyDisplayableObjectResp* msg);
  static const ::BasilType::ObjectIdentifier& objectid(const IdentifyDisplayableObjectResp* msg);
};

const ::BasilType::BasilException&
IdentifyDisplayableObjectResp::HasBitSetters::exception(const IdentifyDisplayableObjectResp* msg) {
  return *msg->exception_;
}
const ::BasilType::ObjectIdentifier&
IdentifyDisplayableObjectResp::HasBitSetters::objectid(const IdentifyDisplayableObjectResp* msg) {
  return *msg->objectid_;
}
void IdentifyDisplayableObjectResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
void IdentifyDisplayableObjectResp::clear_objectid() {
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentifyDisplayableObjectResp::kExceptionFieldNumber;
const int IdentifyDisplayableObjectResp::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentifyDisplayableObjectResp::IdentifyDisplayableObjectResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.IdentifyDisplayableObjectResp)
}
IdentifyDisplayableObjectResp::IdentifyDisplayableObjectResp(const IdentifyDisplayableObjectResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  if (from.has_objectid()) {
    objectid_ = new ::BasilType::ObjectIdentifier(*from.objectid_);
  } else {
    objectid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.IdentifyDisplayableObjectResp)
}

void IdentifyDisplayableObjectResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IdentifyDisplayableObjectResp_BasilServer_2eproto.base);
  ::memset(&exception_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&exception_)) + sizeof(objectid_));
}

IdentifyDisplayableObjectResp::~IdentifyDisplayableObjectResp() {
  // @@protoc_insertion_point(destructor:BasilServer.IdentifyDisplayableObjectResp)
  SharedDtor();
}

void IdentifyDisplayableObjectResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
  if (this != internal_default_instance()) delete objectid_;
}

void IdentifyDisplayableObjectResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IdentifyDisplayableObjectResp& IdentifyDisplayableObjectResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IdentifyDisplayableObjectResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void IdentifyDisplayableObjectResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.IdentifyDisplayableObjectResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IdentifyDisplayableObjectResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.ObjectIdentifier objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_objectid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IdentifyDisplayableObjectResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.IdentifyDisplayableObjectResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.ObjectIdentifier objectId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_objectid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.IdentifyDisplayableObjectResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.IdentifyDisplayableObjectResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IdentifyDisplayableObjectResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.IdentifyDisplayableObjectResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::objectid(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.IdentifyDisplayableObjectResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* IdentifyDisplayableObjectResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.IdentifyDisplayableObjectResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::objectid(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.IdentifyDisplayableObjectResp)
  return target;
}

size_t IdentifyDisplayableObjectResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.IdentifyDisplayableObjectResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdentifyDisplayableObjectResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.IdentifyDisplayableObjectResp)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentifyDisplayableObjectResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IdentifyDisplayableObjectResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.IdentifyDisplayableObjectResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.IdentifyDisplayableObjectResp)
    MergeFrom(*source);
  }
}

void IdentifyDisplayableObjectResp::MergeFrom(const IdentifyDisplayableObjectResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.IdentifyDisplayableObjectResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
  if (from.has_objectid()) {
    mutable_objectid()->::BasilType::ObjectIdentifier::MergeFrom(from.objectid());
  }
}

void IdentifyDisplayableObjectResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.IdentifyDisplayableObjectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifyDisplayableObjectResp::CopyFrom(const IdentifyDisplayableObjectResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.IdentifyDisplayableObjectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifyDisplayableObjectResp::IsInitialized() const {
  return true;
}

void IdentifyDisplayableObjectResp::Swap(IdentifyDisplayableObjectResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentifyDisplayableObjectResp::InternalSwap(IdentifyDisplayableObjectResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IdentifyDisplayableObjectResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ForgetDisplayableObjectReq::InitAsDefaultInstance() {
  ::BasilServer::_ForgetDisplayableObjectReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_ForgetDisplayableObjectReq_default_instance_._instance.get_mutable()->objectid_ = const_cast< ::BasilType::ObjectIdentifier*>(
      ::BasilType::ObjectIdentifier::internal_default_instance());
}
class ForgetDisplayableObjectReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const ForgetDisplayableObjectReq* msg);
  static const ::BasilType::ObjectIdentifier& objectid(const ForgetDisplayableObjectReq* msg);
};

const ::BasilType::AccessAuthorization&
ForgetDisplayableObjectReq::HasBitSetters::auth(const ForgetDisplayableObjectReq* msg) {
  return *msg->auth_;
}
const ::BasilType::ObjectIdentifier&
ForgetDisplayableObjectReq::HasBitSetters::objectid(const ForgetDisplayableObjectReq* msg) {
  return *msg->objectid_;
}
void ForgetDisplayableObjectReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void ForgetDisplayableObjectReq::clear_objectid() {
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForgetDisplayableObjectReq::kAuthFieldNumber;
const int ForgetDisplayableObjectReq::kObjectIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForgetDisplayableObjectReq::ForgetDisplayableObjectReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.ForgetDisplayableObjectReq)
}
ForgetDisplayableObjectReq::ForgetDisplayableObjectReq(const ForgetDisplayableObjectReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_objectid()) {
    objectid_ = new ::BasilType::ObjectIdentifier(*from.objectid_);
  } else {
    objectid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.ForgetDisplayableObjectReq)
}

void ForgetDisplayableObjectReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ForgetDisplayableObjectReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(objectid_));
}

ForgetDisplayableObjectReq::~ForgetDisplayableObjectReq() {
  // @@protoc_insertion_point(destructor:BasilServer.ForgetDisplayableObjectReq)
  SharedDtor();
}

void ForgetDisplayableObjectReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete objectid_;
}

void ForgetDisplayableObjectReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ForgetDisplayableObjectReq& ForgetDisplayableObjectReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ForgetDisplayableObjectReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void ForgetDisplayableObjectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.ForgetDisplayableObjectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ForgetDisplayableObjectReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.ObjectIdentifier objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_objectid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ForgetDisplayableObjectReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.ForgetDisplayableObjectReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.ObjectIdentifier objectId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_objectid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.ForgetDisplayableObjectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.ForgetDisplayableObjectReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ForgetDisplayableObjectReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.ForgetDisplayableObjectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::objectid(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.ForgetDisplayableObjectReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* ForgetDisplayableObjectReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.ForgetDisplayableObjectReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::objectid(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.ForgetDisplayableObjectReq)
  return target;
}

size_t ForgetDisplayableObjectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.ForgetDisplayableObjectReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForgetDisplayableObjectReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.ForgetDisplayableObjectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ForgetDisplayableObjectReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ForgetDisplayableObjectReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.ForgetDisplayableObjectReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.ForgetDisplayableObjectReq)
    MergeFrom(*source);
  }
}

void ForgetDisplayableObjectReq::MergeFrom(const ForgetDisplayableObjectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.ForgetDisplayableObjectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_objectid()) {
    mutable_objectid()->::BasilType::ObjectIdentifier::MergeFrom(from.objectid());
  }
}

void ForgetDisplayableObjectReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.ForgetDisplayableObjectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForgetDisplayableObjectReq::CopyFrom(const ForgetDisplayableObjectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.ForgetDisplayableObjectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgetDisplayableObjectReq::IsInitialized() const {
  return true;
}

void ForgetDisplayableObjectReq::Swap(ForgetDisplayableObjectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForgetDisplayableObjectReq::InternalSwap(ForgetDisplayableObjectReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgetDisplayableObjectReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ForgetDisplayableObjectResp::InitAsDefaultInstance() {
  ::BasilServer::_ForgetDisplayableObjectResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class ForgetDisplayableObjectResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const ForgetDisplayableObjectResp* msg);
};

const ::BasilType::BasilException&
ForgetDisplayableObjectResp::HasBitSetters::exception(const ForgetDisplayableObjectResp* msg) {
  return *msg->exception_;
}
void ForgetDisplayableObjectResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForgetDisplayableObjectResp::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForgetDisplayableObjectResp::ForgetDisplayableObjectResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.ForgetDisplayableObjectResp)
}
ForgetDisplayableObjectResp::ForgetDisplayableObjectResp(const ForgetDisplayableObjectResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.ForgetDisplayableObjectResp)
}

void ForgetDisplayableObjectResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ForgetDisplayableObjectResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

ForgetDisplayableObjectResp::~ForgetDisplayableObjectResp() {
  // @@protoc_insertion_point(destructor:BasilServer.ForgetDisplayableObjectResp)
  SharedDtor();
}

void ForgetDisplayableObjectResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void ForgetDisplayableObjectResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ForgetDisplayableObjectResp& ForgetDisplayableObjectResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ForgetDisplayableObjectResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void ForgetDisplayableObjectResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.ForgetDisplayableObjectResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ForgetDisplayableObjectResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ForgetDisplayableObjectResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.ForgetDisplayableObjectResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.ForgetDisplayableObjectResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.ForgetDisplayableObjectResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ForgetDisplayableObjectResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.ForgetDisplayableObjectResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.ForgetDisplayableObjectResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* ForgetDisplayableObjectResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.ForgetDisplayableObjectResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.ForgetDisplayableObjectResp)
  return target;
}

size_t ForgetDisplayableObjectResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.ForgetDisplayableObjectResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForgetDisplayableObjectResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.ForgetDisplayableObjectResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ForgetDisplayableObjectResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ForgetDisplayableObjectResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.ForgetDisplayableObjectResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.ForgetDisplayableObjectResp)
    MergeFrom(*source);
  }
}

void ForgetDisplayableObjectResp::MergeFrom(const ForgetDisplayableObjectResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.ForgetDisplayableObjectResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void ForgetDisplayableObjectResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.ForgetDisplayableObjectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForgetDisplayableObjectResp::CopyFrom(const ForgetDisplayableObjectResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.ForgetDisplayableObjectResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForgetDisplayableObjectResp::IsInitialized() const {
  return true;
}

void ForgetDisplayableObjectResp::Swap(ForgetDisplayableObjectResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForgetDisplayableObjectResp::InternalSwap(ForgetDisplayableObjectResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ForgetDisplayableObjectResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse() {}
CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::MergeFrom(const CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CreateObjectInstanceReq::InitAsDefaultInstance() {
  ::BasilServer::_CreateObjectInstanceReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_CreateObjectInstanceReq_default_instance_._instance.get_mutable()->objectid_ = const_cast< ::BasilType::ObjectIdentifier*>(
      ::BasilType::ObjectIdentifier::internal_default_instance());
  ::BasilServer::_CreateObjectInstanceReq_default_instance_._instance.get_mutable()->instanceid_ = const_cast< ::BasilType::InstanceIdentifier*>(
      ::BasilType::InstanceIdentifier::internal_default_instance());
  ::BasilServer::_CreateObjectInstanceReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::BasilType::InstancePositionInfo*>(
      ::BasilType::InstancePositionInfo::internal_default_instance());
}
class CreateObjectInstanceReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const CreateObjectInstanceReq* msg);
  static const ::BasilType::ObjectIdentifier& objectid(const CreateObjectInstanceReq* msg);
  static const ::BasilType::InstanceIdentifier& instanceid(const CreateObjectInstanceReq* msg);
  static const ::BasilType::InstancePositionInfo& pos(const CreateObjectInstanceReq* msg);
};

const ::BasilType::AccessAuthorization&
CreateObjectInstanceReq::HasBitSetters::auth(const CreateObjectInstanceReq* msg) {
  return *msg->auth_;
}
const ::BasilType::ObjectIdentifier&
CreateObjectInstanceReq::HasBitSetters::objectid(const CreateObjectInstanceReq* msg) {
  return *msg->objectid_;
}
const ::BasilType::InstanceIdentifier&
CreateObjectInstanceReq::HasBitSetters::instanceid(const CreateObjectInstanceReq* msg) {
  return *msg->instanceid_;
}
const ::BasilType::InstancePositionInfo&
CreateObjectInstanceReq::HasBitSetters::pos(const CreateObjectInstanceReq* msg) {
  return *msg->pos_;
}
void CreateObjectInstanceReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void CreateObjectInstanceReq::clear_objectid() {
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
}
void CreateObjectInstanceReq::clear_instanceid() {
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
}
void CreateObjectInstanceReq::clear_pos() {
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateObjectInstanceReq::kAuthFieldNumber;
const int CreateObjectInstanceReq::kObjectIdFieldNumber;
const int CreateObjectInstanceReq::kInstanceIdFieldNumber;
const int CreateObjectInstanceReq::kPosFieldNumber;
const int CreateObjectInstanceReq::kPropertiesToSetFieldNumber;
const int CreateObjectInstanceReq::kInstanceCountHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateObjectInstanceReq::CreateObjectInstanceReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.CreateObjectInstanceReq)
}
CreateObjectInstanceReq::CreateObjectInstanceReq(const CreateObjectInstanceReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  propertiestoset_.MergeFrom(from.propertiestoset_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_objectid()) {
    objectid_ = new ::BasilType::ObjectIdentifier(*from.objectid_);
  } else {
    objectid_ = nullptr;
  }
  if (from.has_instanceid()) {
    instanceid_ = new ::BasilType::InstanceIdentifier(*from.instanceid_);
  } else {
    instanceid_ = nullptr;
  }
  if (from.has_pos()) {
    pos_ = new ::BasilType::InstancePositionInfo(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  instancecounthint_ = from.instancecounthint_;
  // @@protoc_insertion_point(copy_constructor:BasilServer.CreateObjectInstanceReq)
}

void CreateObjectInstanceReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectInstanceReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instancecounthint_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(instancecounthint_));
}

CreateObjectInstanceReq::~CreateObjectInstanceReq() {
  // @@protoc_insertion_point(destructor:BasilServer.CreateObjectInstanceReq)
  SharedDtor();
}

void CreateObjectInstanceReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete objectid_;
  if (this != internal_default_instance()) delete instanceid_;
  if (this != internal_default_instance()) delete pos_;
}

void CreateObjectInstanceReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectInstanceReq& CreateObjectInstanceReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectInstanceReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectInstanceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.CreateObjectInstanceReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  propertiestoset_.Clear();
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  instancecounthint_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateObjectInstanceReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.ObjectIdentifier objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_objectid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstanceIdentifier instanceId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_instanceid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstancePositionInfo pos = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_pos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> propertiesToSet = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&propertiestoset_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // int32 InstanceCountHint = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          instancecounthint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateObjectInstanceReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.CreateObjectInstanceReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.ObjectIdentifier objectId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_objectid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstanceIdentifier instanceId = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_instanceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstancePositionInfo pos = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> propertiesToSet = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&propertiestoset_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.CreateObjectInstanceReq.PropertiesToSetEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.CreateObjectInstanceReq.PropertiesToSetEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 InstanceCountHint = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &instancecounthint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.CreateObjectInstanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.CreateObjectInstanceReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateObjectInstanceReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.CreateObjectInstanceReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::objectid(this), output);
  }

  // .BasilType.InstanceIdentifier instanceId = 3;
  if (this->has_instanceid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::instanceid(this), output);
  }

  // .BasilType.InstancePositionInfo pos = 4;
  if (this->has_pos()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::pos(this), output);
  }

  // map<string, string> propertiesToSet = 5;
  if (!this->propertiestoset().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.CreateObjectInstanceReq.PropertiesToSetEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.CreateObjectInstanceReq.PropertiesToSetEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->propertiestoset().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->propertiestoset().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->propertiestoset().begin();
          it != this->propertiestoset().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::Funcs::SerializeToCodedStream(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->propertiestoset().begin();
          it != this->propertiestoset().end(); ++it) {
        CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::Funcs::SerializeToCodedStream(5, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int32 InstanceCountHint = 6;
  if (this->instancecounthint() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->instancecounthint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.CreateObjectInstanceReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectInstanceReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.CreateObjectInstanceReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::objectid(this), target);
  }

  // .BasilType.InstanceIdentifier instanceId = 3;
  if (this->has_instanceid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::instanceid(this), target);
  }

  // .BasilType.InstancePositionInfo pos = 4;
  if (this->has_pos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::pos(this), target);
  }

  // map<string, string> propertiesToSet = 5;
  if (!this->propertiestoset().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.CreateObjectInstanceReq.PropertiesToSetEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.CreateObjectInstanceReq.PropertiesToSetEntry.value");
      }
    };

    if (false &&
        this->propertiestoset().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->propertiestoset().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->propertiestoset().begin();
          it != this->propertiestoset().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::Funcs::SerializeToArray(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->propertiestoset().begin();
          it != this->propertiestoset().end(); ++it) {
        target = CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::Funcs::SerializeToArray(5, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // int32 InstanceCountHint = 6;
  if (this->instancecounthint() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->instancecounthint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.CreateObjectInstanceReq)
  return target;
}

size_t CreateObjectInstanceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.CreateObjectInstanceReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> propertiesToSet = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->propertiestoset_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->propertiestoset().begin();
      it != this->propertiestoset().end(); ++it) {
    total_size += CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectid_);
  }

  // .BasilType.InstanceIdentifier instanceId = 3;
  if (this->has_instanceid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *instanceid_);
  }

  // .BasilType.InstancePositionInfo pos = 4;
  if (this->has_pos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // int32 InstanceCountHint = 6;
  if (this->instancecounthint() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->instancecounthint());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectInstanceReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.CreateObjectInstanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectInstanceReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectInstanceReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.CreateObjectInstanceReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.CreateObjectInstanceReq)
    MergeFrom(*source);
  }
}

void CreateObjectInstanceReq::MergeFrom(const CreateObjectInstanceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.CreateObjectInstanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  propertiestoset_.MergeFrom(from.propertiestoset_);
  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_objectid()) {
    mutable_objectid()->::BasilType::ObjectIdentifier::MergeFrom(from.objectid());
  }
  if (from.has_instanceid()) {
    mutable_instanceid()->::BasilType::InstanceIdentifier::MergeFrom(from.instanceid());
  }
  if (from.has_pos()) {
    mutable_pos()->::BasilType::InstancePositionInfo::MergeFrom(from.pos());
  }
  if (from.instancecounthint() != 0) {
    set_instancecounthint(from.instancecounthint());
  }
}

void CreateObjectInstanceReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.CreateObjectInstanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectInstanceReq::CopyFrom(const CreateObjectInstanceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.CreateObjectInstanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectInstanceReq::IsInitialized() const {
  return true;
}

void CreateObjectInstanceReq::Swap(CreateObjectInstanceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateObjectInstanceReq::InternalSwap(CreateObjectInstanceReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  propertiestoset_.Swap(&other->propertiestoset_);
  swap(auth_, other->auth_);
  swap(objectid_, other->objectid_);
  swap(instanceid_, other->instanceid_);
  swap(pos_, other->pos_);
  swap(instancecounthint_, other->instancecounthint_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectInstanceReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectInstanceResp::InitAsDefaultInstance() {
  ::BasilServer::_CreateObjectInstanceResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
  ::BasilServer::_CreateObjectInstanceResp_default_instance_._instance.get_mutable()->instanceid_ = const_cast< ::BasilType::InstanceIdentifier*>(
      ::BasilType::InstanceIdentifier::internal_default_instance());
}
class CreateObjectInstanceResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const CreateObjectInstanceResp* msg);
  static const ::BasilType::InstanceIdentifier& instanceid(const CreateObjectInstanceResp* msg);
};

const ::BasilType::BasilException&
CreateObjectInstanceResp::HasBitSetters::exception(const CreateObjectInstanceResp* msg) {
  return *msg->exception_;
}
const ::BasilType::InstanceIdentifier&
CreateObjectInstanceResp::HasBitSetters::instanceid(const CreateObjectInstanceResp* msg) {
  return *msg->instanceid_;
}
void CreateObjectInstanceResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
void CreateObjectInstanceResp::clear_instanceid() {
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateObjectInstanceResp::kExceptionFieldNumber;
const int CreateObjectInstanceResp::kInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateObjectInstanceResp::CreateObjectInstanceResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.CreateObjectInstanceResp)
}
CreateObjectInstanceResp::CreateObjectInstanceResp(const CreateObjectInstanceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  if (from.has_instanceid()) {
    instanceid_ = new ::BasilType::InstanceIdentifier(*from.instanceid_);
  } else {
    instanceid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.CreateObjectInstanceResp)
}

void CreateObjectInstanceResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectInstanceResp_BasilServer_2eproto.base);
  ::memset(&exception_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanceid_) -
      reinterpret_cast<char*>(&exception_)) + sizeof(instanceid_));
}

CreateObjectInstanceResp::~CreateObjectInstanceResp() {
  // @@protoc_insertion_point(destructor:BasilServer.CreateObjectInstanceResp)
  SharedDtor();
}

void CreateObjectInstanceResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
  if (this != internal_default_instance()) delete instanceid_;
}

void CreateObjectInstanceResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectInstanceResp& CreateObjectInstanceResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectInstanceResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectInstanceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.CreateObjectInstanceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateObjectInstanceResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_instanceid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateObjectInstanceResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.CreateObjectInstanceResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_instanceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.CreateObjectInstanceResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.CreateObjectInstanceResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateObjectInstanceResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.CreateObjectInstanceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::instanceid(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.CreateObjectInstanceResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectInstanceResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.CreateObjectInstanceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::instanceid(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.CreateObjectInstanceResp)
  return target;
}

size_t CreateObjectInstanceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.CreateObjectInstanceResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *instanceid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectInstanceResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.CreateObjectInstanceResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectInstanceResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectInstanceResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.CreateObjectInstanceResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.CreateObjectInstanceResp)
    MergeFrom(*source);
  }
}

void CreateObjectInstanceResp::MergeFrom(const CreateObjectInstanceResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.CreateObjectInstanceResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
  if (from.has_instanceid()) {
    mutable_instanceid()->::BasilType::InstanceIdentifier::MergeFrom(from.instanceid());
  }
}

void CreateObjectInstanceResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.CreateObjectInstanceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectInstanceResp::CopyFrom(const CreateObjectInstanceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.CreateObjectInstanceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectInstanceResp::IsInitialized() const {
  return true;
}

void CreateObjectInstanceResp::Swap(CreateObjectInstanceResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateObjectInstanceResp::InternalSwap(CreateObjectInstanceResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
  swap(instanceid_, other->instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectInstanceResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectInstanceReq::InitAsDefaultInstance() {
  ::BasilServer::_DeleteObjectInstanceReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_DeleteObjectInstanceReq_default_instance_._instance.get_mutable()->instanceid_ = const_cast< ::BasilType::InstanceIdentifier*>(
      ::BasilType::InstanceIdentifier::internal_default_instance());
}
class DeleteObjectInstanceReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const DeleteObjectInstanceReq* msg);
  static const ::BasilType::InstanceIdentifier& instanceid(const DeleteObjectInstanceReq* msg);
};

const ::BasilType::AccessAuthorization&
DeleteObjectInstanceReq::HasBitSetters::auth(const DeleteObjectInstanceReq* msg) {
  return *msg->auth_;
}
const ::BasilType::InstanceIdentifier&
DeleteObjectInstanceReq::HasBitSetters::instanceid(const DeleteObjectInstanceReq* msg) {
  return *msg->instanceid_;
}
void DeleteObjectInstanceReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void DeleteObjectInstanceReq::clear_instanceid() {
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteObjectInstanceReq::kAuthFieldNumber;
const int DeleteObjectInstanceReq::kInstanceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteObjectInstanceReq::DeleteObjectInstanceReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.DeleteObjectInstanceReq)
}
DeleteObjectInstanceReq::DeleteObjectInstanceReq(const DeleteObjectInstanceReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_instanceid()) {
    instanceid_ = new ::BasilType::InstanceIdentifier(*from.instanceid_);
  } else {
    instanceid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.DeleteObjectInstanceReq)
}

void DeleteObjectInstanceReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteObjectInstanceReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanceid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(instanceid_));
}

DeleteObjectInstanceReq::~DeleteObjectInstanceReq() {
  // @@protoc_insertion_point(destructor:BasilServer.DeleteObjectInstanceReq)
  SharedDtor();
}

void DeleteObjectInstanceReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete instanceid_;
}

void DeleteObjectInstanceReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectInstanceReq& DeleteObjectInstanceReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectInstanceReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectInstanceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.DeleteObjectInstanceReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteObjectInstanceReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_instanceid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteObjectInstanceReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.DeleteObjectInstanceReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_instanceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.DeleteObjectInstanceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.DeleteObjectInstanceReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteObjectInstanceReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.DeleteObjectInstanceReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::instanceid(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.DeleteObjectInstanceReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectInstanceReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.DeleteObjectInstanceReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::instanceid(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.DeleteObjectInstanceReq)
  return target;
}

size_t DeleteObjectInstanceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.DeleteObjectInstanceReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *instanceid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectInstanceReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.DeleteObjectInstanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectInstanceReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectInstanceReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.DeleteObjectInstanceReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.DeleteObjectInstanceReq)
    MergeFrom(*source);
  }
}

void DeleteObjectInstanceReq::MergeFrom(const DeleteObjectInstanceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.DeleteObjectInstanceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_instanceid()) {
    mutable_instanceid()->::BasilType::InstanceIdentifier::MergeFrom(from.instanceid());
  }
}

void DeleteObjectInstanceReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.DeleteObjectInstanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectInstanceReq::CopyFrom(const DeleteObjectInstanceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.DeleteObjectInstanceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectInstanceReq::IsInitialized() const {
  return true;
}

void DeleteObjectInstanceReq::Swap(DeleteObjectInstanceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteObjectInstanceReq::InternalSwap(DeleteObjectInstanceReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
  swap(instanceid_, other->instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectInstanceReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteObjectInstanceResp::InitAsDefaultInstance() {
  ::BasilServer::_DeleteObjectInstanceResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class DeleteObjectInstanceResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const DeleteObjectInstanceResp* msg);
};

const ::BasilType::BasilException&
DeleteObjectInstanceResp::HasBitSetters::exception(const DeleteObjectInstanceResp* msg) {
  return *msg->exception_;
}
void DeleteObjectInstanceResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteObjectInstanceResp::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteObjectInstanceResp::DeleteObjectInstanceResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.DeleteObjectInstanceResp)
}
DeleteObjectInstanceResp::DeleteObjectInstanceResp(const DeleteObjectInstanceResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.DeleteObjectInstanceResp)
}

void DeleteObjectInstanceResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteObjectInstanceResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

DeleteObjectInstanceResp::~DeleteObjectInstanceResp() {
  // @@protoc_insertion_point(destructor:BasilServer.DeleteObjectInstanceResp)
  SharedDtor();
}

void DeleteObjectInstanceResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void DeleteObjectInstanceResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteObjectInstanceResp& DeleteObjectInstanceResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteObjectInstanceResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void DeleteObjectInstanceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.DeleteObjectInstanceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteObjectInstanceResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteObjectInstanceResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.DeleteObjectInstanceResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.DeleteObjectInstanceResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.DeleteObjectInstanceResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteObjectInstanceResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.DeleteObjectInstanceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.DeleteObjectInstanceResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteObjectInstanceResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.DeleteObjectInstanceResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.DeleteObjectInstanceResp)
  return target;
}

size_t DeleteObjectInstanceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.DeleteObjectInstanceResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteObjectInstanceResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.DeleteObjectInstanceResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteObjectInstanceResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteObjectInstanceResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.DeleteObjectInstanceResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.DeleteObjectInstanceResp)
    MergeFrom(*source);
  }
}

void DeleteObjectInstanceResp::MergeFrom(const DeleteObjectInstanceResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.DeleteObjectInstanceResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void DeleteObjectInstanceResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.DeleteObjectInstanceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteObjectInstanceResp::CopyFrom(const DeleteObjectInstanceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.DeleteObjectInstanceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteObjectInstanceResp::IsInitialized() const {
  return true;
}

void DeleteObjectInstanceResp::Swap(DeleteObjectInstanceResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteObjectInstanceResp::InternalSwap(DeleteObjectInstanceResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteObjectInstanceResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

UpdateObjectPropertyReq_PropsEntry_DoNotUse::UpdateObjectPropertyReq_PropsEntry_DoNotUse() {}
UpdateObjectPropertyReq_PropsEntry_DoNotUse::UpdateObjectPropertyReq_PropsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void UpdateObjectPropertyReq_PropsEntry_DoNotUse::MergeFrom(const UpdateObjectPropertyReq_PropsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectPropertyReq_PropsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void UpdateObjectPropertyReq_PropsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void UpdateObjectPropertyReq::InitAsDefaultInstance() {
  ::BasilServer::_UpdateObjectPropertyReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_UpdateObjectPropertyReq_default_instance_._instance.get_mutable()->objectid_ = const_cast< ::BasilType::ObjectIdentifier*>(
      ::BasilType::ObjectIdentifier::internal_default_instance());
}
class UpdateObjectPropertyReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const UpdateObjectPropertyReq* msg);
  static const ::BasilType::ObjectIdentifier& objectid(const UpdateObjectPropertyReq* msg);
};

const ::BasilType::AccessAuthorization&
UpdateObjectPropertyReq::HasBitSetters::auth(const UpdateObjectPropertyReq* msg) {
  return *msg->auth_;
}
const ::BasilType::ObjectIdentifier&
UpdateObjectPropertyReq::HasBitSetters::objectid(const UpdateObjectPropertyReq* msg) {
  return *msg->objectid_;
}
void UpdateObjectPropertyReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void UpdateObjectPropertyReq::clear_objectid() {
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateObjectPropertyReq::kAuthFieldNumber;
const int UpdateObjectPropertyReq::kObjectIdFieldNumber;
const int UpdateObjectPropertyReq::kPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateObjectPropertyReq::UpdateObjectPropertyReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.UpdateObjectPropertyReq)
}
UpdateObjectPropertyReq::UpdateObjectPropertyReq(const UpdateObjectPropertyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  props_.MergeFrom(from.props_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_objectid()) {
    objectid_ = new ::BasilType::ObjectIdentifier(*from.objectid_);
  } else {
    objectid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.UpdateObjectPropertyReq)
}

void UpdateObjectPropertyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateObjectPropertyReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(objectid_));
}

UpdateObjectPropertyReq::~UpdateObjectPropertyReq() {
  // @@protoc_insertion_point(destructor:BasilServer.UpdateObjectPropertyReq)
  SharedDtor();
}

void UpdateObjectPropertyReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete objectid_;
}

void UpdateObjectPropertyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectPropertyReq& UpdateObjectPropertyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectPropertyReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectPropertyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.UpdateObjectPropertyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  props_.Clear();
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateObjectPropertyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.ObjectIdentifier objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_objectid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> props = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&props_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateObjectPropertyReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.UpdateObjectPropertyReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.ObjectIdentifier objectId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_objectid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> props = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          UpdateObjectPropertyReq_PropsEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              UpdateObjectPropertyReq_PropsEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&props_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.UpdateObjectPropertyReq.PropsEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.UpdateObjectPropertyReq.PropsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.UpdateObjectPropertyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.UpdateObjectPropertyReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateObjectPropertyReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.UpdateObjectPropertyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::objectid(this), output);
  }

  // map<string, string> props = 3;
  if (!this->props().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateObjectPropertyReq.PropsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateObjectPropertyReq.PropsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->props().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->props().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        UpdateObjectPropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToCodedStream(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it) {
        UpdateObjectPropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToCodedStream(3, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.UpdateObjectPropertyReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectPropertyReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.UpdateObjectPropertyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::objectid(this), target);
  }

  // map<string, string> props = 3;
  if (!this->props().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateObjectPropertyReq.PropsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateObjectPropertyReq.PropsEntry.value");
      }
    };

    if (false &&
        this->props().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->props().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = UpdateObjectPropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToArray(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it) {
        target = UpdateObjectPropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToArray(3, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.UpdateObjectPropertyReq)
  return target;
}

size_t UpdateObjectPropertyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.UpdateObjectPropertyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> props = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->props_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->props().begin();
      it != this->props().end(); ++it) {
    total_size += UpdateObjectPropertyReq_PropsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectPropertyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.UpdateObjectPropertyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectPropertyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectPropertyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.UpdateObjectPropertyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.UpdateObjectPropertyReq)
    MergeFrom(*source);
  }
}

void UpdateObjectPropertyReq::MergeFrom(const UpdateObjectPropertyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.UpdateObjectPropertyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  props_.MergeFrom(from.props_);
  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_objectid()) {
    mutable_objectid()->::BasilType::ObjectIdentifier::MergeFrom(from.objectid());
  }
}

void UpdateObjectPropertyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.UpdateObjectPropertyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectPropertyReq::CopyFrom(const UpdateObjectPropertyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.UpdateObjectPropertyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectPropertyReq::IsInitialized() const {
  return true;
}

void UpdateObjectPropertyReq::Swap(UpdateObjectPropertyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateObjectPropertyReq::InternalSwap(UpdateObjectPropertyReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  props_.Swap(&other->props_);
  swap(auth_, other->auth_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectPropertyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateObjectPropertyResp::InitAsDefaultInstance() {
  ::BasilServer::_UpdateObjectPropertyResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class UpdateObjectPropertyResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const UpdateObjectPropertyResp* msg);
};

const ::BasilType::BasilException&
UpdateObjectPropertyResp::HasBitSetters::exception(const UpdateObjectPropertyResp* msg) {
  return *msg->exception_;
}
void UpdateObjectPropertyResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateObjectPropertyResp::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateObjectPropertyResp::UpdateObjectPropertyResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.UpdateObjectPropertyResp)
}
UpdateObjectPropertyResp::UpdateObjectPropertyResp(const UpdateObjectPropertyResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.UpdateObjectPropertyResp)
}

void UpdateObjectPropertyResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateObjectPropertyResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

UpdateObjectPropertyResp::~UpdateObjectPropertyResp() {
  // @@protoc_insertion_point(destructor:BasilServer.UpdateObjectPropertyResp)
  SharedDtor();
}

void UpdateObjectPropertyResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void UpdateObjectPropertyResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateObjectPropertyResp& UpdateObjectPropertyResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateObjectPropertyResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void UpdateObjectPropertyResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.UpdateObjectPropertyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateObjectPropertyResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateObjectPropertyResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.UpdateObjectPropertyResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.UpdateObjectPropertyResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.UpdateObjectPropertyResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateObjectPropertyResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.UpdateObjectPropertyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.UpdateObjectPropertyResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateObjectPropertyResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.UpdateObjectPropertyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.UpdateObjectPropertyResp)
  return target;
}

size_t UpdateObjectPropertyResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.UpdateObjectPropertyResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateObjectPropertyResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.UpdateObjectPropertyResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectPropertyResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateObjectPropertyResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.UpdateObjectPropertyResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.UpdateObjectPropertyResp)
    MergeFrom(*source);
  }
}

void UpdateObjectPropertyResp::MergeFrom(const UpdateObjectPropertyResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.UpdateObjectPropertyResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void UpdateObjectPropertyResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.UpdateObjectPropertyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectPropertyResp::CopyFrom(const UpdateObjectPropertyResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.UpdateObjectPropertyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectPropertyResp::IsInitialized() const {
  return true;
}

void UpdateObjectPropertyResp::Swap(UpdateObjectPropertyResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateObjectPropertyResp::InternalSwap(UpdateObjectPropertyResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateObjectPropertyResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

UpdateInstancePropertyReq_PropsEntry_DoNotUse::UpdateInstancePropertyReq_PropsEntry_DoNotUse() {}
UpdateInstancePropertyReq_PropsEntry_DoNotUse::UpdateInstancePropertyReq_PropsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void UpdateInstancePropertyReq_PropsEntry_DoNotUse::MergeFrom(const UpdateInstancePropertyReq_PropsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata UpdateInstancePropertyReq_PropsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void UpdateInstancePropertyReq_PropsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void UpdateInstancePropertyReq::InitAsDefaultInstance() {
  ::BasilServer::_UpdateInstancePropertyReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_UpdateInstancePropertyReq_default_instance_._instance.get_mutable()->instanceid_ = const_cast< ::BasilType::InstanceIdentifier*>(
      ::BasilType::InstanceIdentifier::internal_default_instance());
}
class UpdateInstancePropertyReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const UpdateInstancePropertyReq* msg);
  static const ::BasilType::InstanceIdentifier& instanceid(const UpdateInstancePropertyReq* msg);
};

const ::BasilType::AccessAuthorization&
UpdateInstancePropertyReq::HasBitSetters::auth(const UpdateInstancePropertyReq* msg) {
  return *msg->auth_;
}
const ::BasilType::InstanceIdentifier&
UpdateInstancePropertyReq::HasBitSetters::instanceid(const UpdateInstancePropertyReq* msg) {
  return *msg->instanceid_;
}
void UpdateInstancePropertyReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void UpdateInstancePropertyReq::clear_instanceid() {
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateInstancePropertyReq::kAuthFieldNumber;
const int UpdateInstancePropertyReq::kInstanceIdFieldNumber;
const int UpdateInstancePropertyReq::kPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateInstancePropertyReq::UpdateInstancePropertyReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.UpdateInstancePropertyReq)
}
UpdateInstancePropertyReq::UpdateInstancePropertyReq(const UpdateInstancePropertyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  props_.MergeFrom(from.props_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_instanceid()) {
    instanceid_ = new ::BasilType::InstanceIdentifier(*from.instanceid_);
  } else {
    instanceid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.UpdateInstancePropertyReq)
}

void UpdateInstancePropertyReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateInstancePropertyReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanceid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(instanceid_));
}

UpdateInstancePropertyReq::~UpdateInstancePropertyReq() {
  // @@protoc_insertion_point(destructor:BasilServer.UpdateInstancePropertyReq)
  SharedDtor();
}

void UpdateInstancePropertyReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete instanceid_;
}

void UpdateInstancePropertyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateInstancePropertyReq& UpdateInstancePropertyReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateInstancePropertyReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void UpdateInstancePropertyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.UpdateInstancePropertyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  props_.Clear();
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateInstancePropertyReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_instanceid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> props = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&props_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateInstancePropertyReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.UpdateInstancePropertyReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_instanceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> props = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          UpdateInstancePropertyReq_PropsEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              UpdateInstancePropertyReq_PropsEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&props_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.UpdateInstancePropertyReq.PropsEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.UpdateInstancePropertyReq.PropsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.UpdateInstancePropertyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.UpdateInstancePropertyReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateInstancePropertyReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.UpdateInstancePropertyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::instanceid(this), output);
  }

  // map<string, string> props = 3;
  if (!this->props().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateInstancePropertyReq.PropsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateInstancePropertyReq.PropsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->props().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->props().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        UpdateInstancePropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToCodedStream(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it) {
        UpdateInstancePropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToCodedStream(3, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.UpdateInstancePropertyReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateInstancePropertyReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.UpdateInstancePropertyReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::instanceid(this), target);
  }

  // map<string, string> props = 3;
  if (!this->props().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateInstancePropertyReq.PropsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.UpdateInstancePropertyReq.PropsEntry.value");
      }
    };

    if (false &&
        this->props().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->props().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = UpdateInstancePropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToArray(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->props().begin();
          it != this->props().end(); ++it) {
        target = UpdateInstancePropertyReq_PropsEntry_DoNotUse::Funcs::SerializeToArray(3, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.UpdateInstancePropertyReq)
  return target;
}

size_t UpdateInstancePropertyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.UpdateInstancePropertyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> props = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->props_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->props().begin();
      it != this->props().end(); ++it) {
    total_size += UpdateInstancePropertyReq_PropsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *instanceid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateInstancePropertyReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.UpdateInstancePropertyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInstancePropertyReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateInstancePropertyReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.UpdateInstancePropertyReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.UpdateInstancePropertyReq)
    MergeFrom(*source);
  }
}

void UpdateInstancePropertyReq::MergeFrom(const UpdateInstancePropertyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.UpdateInstancePropertyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  props_.MergeFrom(from.props_);
  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_instanceid()) {
    mutable_instanceid()->::BasilType::InstanceIdentifier::MergeFrom(from.instanceid());
  }
}

void UpdateInstancePropertyReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.UpdateInstancePropertyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstancePropertyReq::CopyFrom(const UpdateInstancePropertyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.UpdateInstancePropertyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstancePropertyReq::IsInitialized() const {
  return true;
}

void UpdateInstancePropertyReq::Swap(UpdateInstancePropertyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstancePropertyReq::InternalSwap(UpdateInstancePropertyReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  props_.Swap(&other->props_);
  swap(auth_, other->auth_);
  swap(instanceid_, other->instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateInstancePropertyReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateInstancePropertyResp::InitAsDefaultInstance() {
  ::BasilServer::_UpdateInstancePropertyResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class UpdateInstancePropertyResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const UpdateInstancePropertyResp* msg);
};

const ::BasilType::BasilException&
UpdateInstancePropertyResp::HasBitSetters::exception(const UpdateInstancePropertyResp* msg) {
  return *msg->exception_;
}
void UpdateInstancePropertyResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateInstancePropertyResp::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateInstancePropertyResp::UpdateInstancePropertyResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.UpdateInstancePropertyResp)
}
UpdateInstancePropertyResp::UpdateInstancePropertyResp(const UpdateInstancePropertyResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.UpdateInstancePropertyResp)
}

void UpdateInstancePropertyResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateInstancePropertyResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

UpdateInstancePropertyResp::~UpdateInstancePropertyResp() {
  // @@protoc_insertion_point(destructor:BasilServer.UpdateInstancePropertyResp)
  SharedDtor();
}

void UpdateInstancePropertyResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void UpdateInstancePropertyResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateInstancePropertyResp& UpdateInstancePropertyResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateInstancePropertyResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void UpdateInstancePropertyResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.UpdateInstancePropertyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateInstancePropertyResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateInstancePropertyResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.UpdateInstancePropertyResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.UpdateInstancePropertyResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.UpdateInstancePropertyResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateInstancePropertyResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.UpdateInstancePropertyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.UpdateInstancePropertyResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateInstancePropertyResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.UpdateInstancePropertyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.UpdateInstancePropertyResp)
  return target;
}

size_t UpdateInstancePropertyResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.UpdateInstancePropertyResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateInstancePropertyResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.UpdateInstancePropertyResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInstancePropertyResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateInstancePropertyResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.UpdateInstancePropertyResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.UpdateInstancePropertyResp)
    MergeFrom(*source);
  }
}

void UpdateInstancePropertyResp::MergeFrom(const UpdateInstancePropertyResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.UpdateInstancePropertyResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void UpdateInstancePropertyResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.UpdateInstancePropertyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstancePropertyResp::CopyFrom(const UpdateInstancePropertyResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.UpdateInstancePropertyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstancePropertyResp::IsInitialized() const {
  return true;
}

void UpdateInstancePropertyResp::Swap(UpdateInstancePropertyResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstancePropertyResp::InternalSwap(UpdateInstancePropertyResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateInstancePropertyResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateInstancePositionReq::InitAsDefaultInstance() {
  ::BasilServer::_UpdateInstancePositionReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_UpdateInstancePositionReq_default_instance_._instance.get_mutable()->instanceid_ = const_cast< ::BasilType::InstanceIdentifier*>(
      ::BasilType::InstanceIdentifier::internal_default_instance());
  ::BasilServer::_UpdateInstancePositionReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::BasilType::InstancePositionInfo*>(
      ::BasilType::InstancePositionInfo::internal_default_instance());
}
class UpdateInstancePositionReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const UpdateInstancePositionReq* msg);
  static const ::BasilType::InstanceIdentifier& instanceid(const UpdateInstancePositionReq* msg);
  static const ::BasilType::InstancePositionInfo& pos(const UpdateInstancePositionReq* msg);
};

const ::BasilType::AccessAuthorization&
UpdateInstancePositionReq::HasBitSetters::auth(const UpdateInstancePositionReq* msg) {
  return *msg->auth_;
}
const ::BasilType::InstanceIdentifier&
UpdateInstancePositionReq::HasBitSetters::instanceid(const UpdateInstancePositionReq* msg) {
  return *msg->instanceid_;
}
const ::BasilType::InstancePositionInfo&
UpdateInstancePositionReq::HasBitSetters::pos(const UpdateInstancePositionReq* msg) {
  return *msg->pos_;
}
void UpdateInstancePositionReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void UpdateInstancePositionReq::clear_instanceid() {
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
}
void UpdateInstancePositionReq::clear_pos() {
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateInstancePositionReq::kAuthFieldNumber;
const int UpdateInstancePositionReq::kInstanceIdFieldNumber;
const int UpdateInstancePositionReq::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateInstancePositionReq::UpdateInstancePositionReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.UpdateInstancePositionReq)
}
UpdateInstancePositionReq::UpdateInstancePositionReq(const UpdateInstancePositionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_instanceid()) {
    instanceid_ = new ::BasilType::InstanceIdentifier(*from.instanceid_);
  } else {
    instanceid_ = nullptr;
  }
  if (from.has_pos()) {
    pos_ = new ::BasilType::InstancePositionInfo(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.UpdateInstancePositionReq)
}

void UpdateInstancePositionReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateInstancePositionReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(pos_));
}

UpdateInstancePositionReq::~UpdateInstancePositionReq() {
  // @@protoc_insertion_point(destructor:BasilServer.UpdateInstancePositionReq)
  SharedDtor();
}

void UpdateInstancePositionReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete instanceid_;
  if (this != internal_default_instance()) delete pos_;
}

void UpdateInstancePositionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateInstancePositionReq& UpdateInstancePositionReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateInstancePositionReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void UpdateInstancePositionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.UpdateInstancePositionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateInstancePositionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_instanceid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstancePositionInfo pos = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_pos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateInstancePositionReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.UpdateInstancePositionReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_instanceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstancePositionInfo pos = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.UpdateInstancePositionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.UpdateInstancePositionReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateInstancePositionReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.UpdateInstancePositionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::instanceid(this), output);
  }

  // .BasilType.InstancePositionInfo pos = 3;
  if (this->has_pos()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::pos(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.UpdateInstancePositionReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateInstancePositionReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.UpdateInstancePositionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::instanceid(this), target);
  }

  // .BasilType.InstancePositionInfo pos = 3;
  if (this->has_pos()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::pos(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.UpdateInstancePositionReq)
  return target;
}

size_t UpdateInstancePositionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.UpdateInstancePositionReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *instanceid_);
  }

  // .BasilType.InstancePositionInfo pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateInstancePositionReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.UpdateInstancePositionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInstancePositionReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateInstancePositionReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.UpdateInstancePositionReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.UpdateInstancePositionReq)
    MergeFrom(*source);
  }
}

void UpdateInstancePositionReq::MergeFrom(const UpdateInstancePositionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.UpdateInstancePositionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_instanceid()) {
    mutable_instanceid()->::BasilType::InstanceIdentifier::MergeFrom(from.instanceid());
  }
  if (from.has_pos()) {
    mutable_pos()->::BasilType::InstancePositionInfo::MergeFrom(from.pos());
  }
}

void UpdateInstancePositionReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.UpdateInstancePositionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstancePositionReq::CopyFrom(const UpdateInstancePositionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.UpdateInstancePositionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstancePositionReq::IsInitialized() const {
  return true;
}

void UpdateInstancePositionReq::Swap(UpdateInstancePositionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstancePositionReq::InternalSwap(UpdateInstancePositionReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
  swap(instanceid_, other->instanceid_);
  swap(pos_, other->pos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateInstancePositionReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateInstancePositionResp::InitAsDefaultInstance() {
  ::BasilServer::_UpdateInstancePositionResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class UpdateInstancePositionResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const UpdateInstancePositionResp* msg);
};

const ::BasilType::BasilException&
UpdateInstancePositionResp::HasBitSetters::exception(const UpdateInstancePositionResp* msg) {
  return *msg->exception_;
}
void UpdateInstancePositionResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateInstancePositionResp::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateInstancePositionResp::UpdateInstancePositionResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.UpdateInstancePositionResp)
}
UpdateInstancePositionResp::UpdateInstancePositionResp(const UpdateInstancePositionResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.UpdateInstancePositionResp)
}

void UpdateInstancePositionResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateInstancePositionResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

UpdateInstancePositionResp::~UpdateInstancePositionResp() {
  // @@protoc_insertion_point(destructor:BasilServer.UpdateInstancePositionResp)
  SharedDtor();
}

void UpdateInstancePositionResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void UpdateInstancePositionResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateInstancePositionResp& UpdateInstancePositionResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateInstancePositionResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void UpdateInstancePositionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.UpdateInstancePositionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateInstancePositionResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateInstancePositionResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.UpdateInstancePositionResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.UpdateInstancePositionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.UpdateInstancePositionResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateInstancePositionResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.UpdateInstancePositionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.UpdateInstancePositionResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateInstancePositionResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.UpdateInstancePositionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.UpdateInstancePositionResp)
  return target;
}

size_t UpdateInstancePositionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.UpdateInstancePositionResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateInstancePositionResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.UpdateInstancePositionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateInstancePositionResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateInstancePositionResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.UpdateInstancePositionResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.UpdateInstancePositionResp)
    MergeFrom(*source);
  }
}

void UpdateInstancePositionResp::MergeFrom(const UpdateInstancePositionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.UpdateInstancePositionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void UpdateInstancePositionResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.UpdateInstancePositionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateInstancePositionResp::CopyFrom(const UpdateInstancePositionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.UpdateInstancePositionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateInstancePositionResp::IsInitialized() const {
  return true;
}

void UpdateInstancePositionResp::Swap(UpdateInstancePositionResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateInstancePositionResp::InternalSwap(UpdateInstancePositionResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateInstancePositionResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestObjectPropertiesReq::InitAsDefaultInstance() {
  ::BasilServer::_RequestObjectPropertiesReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_RequestObjectPropertiesReq_default_instance_._instance.get_mutable()->objectid_ = const_cast< ::BasilType::ObjectIdentifier*>(
      ::BasilType::ObjectIdentifier::internal_default_instance());
}
class RequestObjectPropertiesReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const RequestObjectPropertiesReq* msg);
  static const ::BasilType::ObjectIdentifier& objectid(const RequestObjectPropertiesReq* msg);
};

const ::BasilType::AccessAuthorization&
RequestObjectPropertiesReq::HasBitSetters::auth(const RequestObjectPropertiesReq* msg) {
  return *msg->auth_;
}
const ::BasilType::ObjectIdentifier&
RequestObjectPropertiesReq::HasBitSetters::objectid(const RequestObjectPropertiesReq* msg) {
  return *msg->objectid_;
}
void RequestObjectPropertiesReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void RequestObjectPropertiesReq::clear_objectid() {
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestObjectPropertiesReq::kAuthFieldNumber;
const int RequestObjectPropertiesReq::kObjectIdFieldNumber;
const int RequestObjectPropertiesReq::kPropertyMatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestObjectPropertiesReq::RequestObjectPropertiesReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.RequestObjectPropertiesReq)
}
RequestObjectPropertiesReq::RequestObjectPropertiesReq(const RequestObjectPropertiesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  propertymatch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.propertymatch().size() > 0) {
    propertymatch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.propertymatch_);
  }
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_objectid()) {
    objectid_ = new ::BasilType::ObjectIdentifier(*from.objectid_);
  } else {
    objectid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.RequestObjectPropertiesReq)
}

void RequestObjectPropertiesReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestObjectPropertiesReq_BasilServer_2eproto.base);
  propertymatch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(objectid_));
}

RequestObjectPropertiesReq::~RequestObjectPropertiesReq() {
  // @@protoc_insertion_point(destructor:BasilServer.RequestObjectPropertiesReq)
  SharedDtor();
}

void RequestObjectPropertiesReq::SharedDtor() {
  propertymatch_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete objectid_;
}

void RequestObjectPropertiesReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestObjectPropertiesReq& RequestObjectPropertiesReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestObjectPropertiesReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void RequestObjectPropertiesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.RequestObjectPropertiesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  propertymatch_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && objectid_ != nullptr) {
    delete objectid_;
  }
  objectid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestObjectPropertiesReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.ObjectIdentifier objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_objectid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string propertyMatch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_propertymatch(), ptr, ctx, "BasilServer.RequestObjectPropertiesReq.propertyMatch");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestObjectPropertiesReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.RequestObjectPropertiesReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.ObjectIdentifier objectId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_objectid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string propertyMatch = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_propertymatch()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->propertymatch().data(), static_cast<int>(this->propertymatch().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.RequestObjectPropertiesReq.propertyMatch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.RequestObjectPropertiesReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.RequestObjectPropertiesReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestObjectPropertiesReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.RequestObjectPropertiesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::objectid(this), output);
  }

  // string propertyMatch = 3;
  if (this->propertymatch().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->propertymatch().data(), static_cast<int>(this->propertymatch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BasilServer.RequestObjectPropertiesReq.propertyMatch");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->propertymatch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.RequestObjectPropertiesReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestObjectPropertiesReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.RequestObjectPropertiesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::objectid(this), target);
  }

  // string propertyMatch = 3;
  if (this->propertymatch().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->propertymatch().data(), static_cast<int>(this->propertymatch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BasilServer.RequestObjectPropertiesReq.propertyMatch");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->propertymatch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.RequestObjectPropertiesReq)
  return target;
}

size_t RequestObjectPropertiesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.RequestObjectPropertiesReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string propertyMatch = 3;
  if (this->propertymatch().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->propertymatch());
  }

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.ObjectIdentifier objectId = 2;
  if (this->has_objectid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestObjectPropertiesReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.RequestObjectPropertiesReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestObjectPropertiesReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestObjectPropertiesReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.RequestObjectPropertiesReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.RequestObjectPropertiesReq)
    MergeFrom(*source);
  }
}

void RequestObjectPropertiesReq::MergeFrom(const RequestObjectPropertiesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.RequestObjectPropertiesReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.propertymatch().size() > 0) {

    propertymatch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.propertymatch_);
  }
  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_objectid()) {
    mutable_objectid()->::BasilType::ObjectIdentifier::MergeFrom(from.objectid());
  }
}

void RequestObjectPropertiesReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.RequestObjectPropertiesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestObjectPropertiesReq::CopyFrom(const RequestObjectPropertiesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.RequestObjectPropertiesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestObjectPropertiesReq::IsInitialized() const {
  return true;
}

void RequestObjectPropertiesReq::Swap(RequestObjectPropertiesReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestObjectPropertiesReq::InternalSwap(RequestObjectPropertiesReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  propertymatch_.Swap(&other->propertymatch_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_, other->auth_);
  swap(objectid_, other->objectid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestObjectPropertiesReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse() {}
RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::MergeFrom(const RequestObjectPropertiesResp_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void RequestObjectPropertiesResp::InitAsDefaultInstance() {
  ::BasilServer::_RequestObjectPropertiesResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class RequestObjectPropertiesResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const RequestObjectPropertiesResp* msg);
};

const ::BasilType::BasilException&
RequestObjectPropertiesResp::HasBitSetters::exception(const RequestObjectPropertiesResp* msg) {
  return *msg->exception_;
}
void RequestObjectPropertiesResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestObjectPropertiesResp::kExceptionFieldNumber;
const int RequestObjectPropertiesResp::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestObjectPropertiesResp::RequestObjectPropertiesResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.RequestObjectPropertiesResp)
}
RequestObjectPropertiesResp::RequestObjectPropertiesResp(const RequestObjectPropertiesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.RequestObjectPropertiesResp)
}

void RequestObjectPropertiesResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestObjectPropertiesResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

RequestObjectPropertiesResp::~RequestObjectPropertiesResp() {
  // @@protoc_insertion_point(destructor:BasilServer.RequestObjectPropertiesResp)
  SharedDtor();
}

void RequestObjectPropertiesResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void RequestObjectPropertiesResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestObjectPropertiesResp& RequestObjectPropertiesResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestObjectPropertiesResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void RequestObjectPropertiesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.RequestObjectPropertiesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestObjectPropertiesResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> properties = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestObjectPropertiesResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.RequestObjectPropertiesResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              RequestObjectPropertiesResp_PropertiesEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&properties_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.RequestObjectPropertiesResp.PropertiesEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.RequestObjectPropertiesResp.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.RequestObjectPropertiesResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.RequestObjectPropertiesResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestObjectPropertiesResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.RequestObjectPropertiesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  // map<string, string> properties = 2;
  if (!this->properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestObjectPropertiesResp.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestObjectPropertiesResp.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToCodedStream(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToCodedStream(2, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.RequestObjectPropertiesResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestObjectPropertiesResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.RequestObjectPropertiesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  // map<string, string> properties = 2;
  if (!this->properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestObjectPropertiesResp.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestObjectPropertiesResp.PropertiesEntry.value");
      }
    };

    if (false &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToArray(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        target = RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToArray(2, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.RequestObjectPropertiesResp)
  return target;
}

size_t RequestObjectPropertiesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.RequestObjectPropertiesResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> properties = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->properties().begin();
      it != this->properties().end(); ++it) {
    total_size += RequestObjectPropertiesResp_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestObjectPropertiesResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.RequestObjectPropertiesResp)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestObjectPropertiesResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestObjectPropertiesResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.RequestObjectPropertiesResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.RequestObjectPropertiesResp)
    MergeFrom(*source);
  }
}

void RequestObjectPropertiesResp::MergeFrom(const RequestObjectPropertiesResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.RequestObjectPropertiesResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void RequestObjectPropertiesResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.RequestObjectPropertiesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestObjectPropertiesResp::CopyFrom(const RequestObjectPropertiesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.RequestObjectPropertiesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestObjectPropertiesResp::IsInitialized() const {
  return true;
}

void RequestObjectPropertiesResp::Swap(RequestObjectPropertiesResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestObjectPropertiesResp::InternalSwap(RequestObjectPropertiesResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  properties_.Swap(&other->properties_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestObjectPropertiesResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestInstancePropertiesReq::InitAsDefaultInstance() {
  ::BasilServer::_RequestInstancePropertiesReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
  ::BasilServer::_RequestInstancePropertiesReq_default_instance_._instance.get_mutable()->instanceid_ = const_cast< ::BasilType::InstanceIdentifier*>(
      ::BasilType::InstanceIdentifier::internal_default_instance());
}
class RequestInstancePropertiesReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const RequestInstancePropertiesReq* msg);
  static const ::BasilType::InstanceIdentifier& instanceid(const RequestInstancePropertiesReq* msg);
};

const ::BasilType::AccessAuthorization&
RequestInstancePropertiesReq::HasBitSetters::auth(const RequestInstancePropertiesReq* msg) {
  return *msg->auth_;
}
const ::BasilType::InstanceIdentifier&
RequestInstancePropertiesReq::HasBitSetters::instanceid(const RequestInstancePropertiesReq* msg) {
  return *msg->instanceid_;
}
void RequestInstancePropertiesReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
void RequestInstancePropertiesReq::clear_instanceid() {
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestInstancePropertiesReq::kAuthFieldNumber;
const int RequestInstancePropertiesReq::kInstanceIdFieldNumber;
const int RequestInstancePropertiesReq::kPropertyMatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestInstancePropertiesReq::RequestInstancePropertiesReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.RequestInstancePropertiesReq)
}
RequestInstancePropertiesReq::RequestInstancePropertiesReq(const RequestInstancePropertiesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  propertymatch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.propertymatch().size() > 0) {
    propertymatch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.propertymatch_);
  }
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  if (from.has_instanceid()) {
    instanceid_ = new ::BasilType::InstanceIdentifier(*from.instanceid_);
  } else {
    instanceid_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.RequestInstancePropertiesReq)
}

void RequestInstancePropertiesReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestInstancePropertiesReq_BasilServer_2eproto.base);
  propertymatch_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanceid_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(instanceid_));
}

RequestInstancePropertiesReq::~RequestInstancePropertiesReq() {
  // @@protoc_insertion_point(destructor:BasilServer.RequestInstancePropertiesReq)
  SharedDtor();
}

void RequestInstancePropertiesReq::SharedDtor() {
  propertymatch_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete instanceid_;
}

void RequestInstancePropertiesReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestInstancePropertiesReq& RequestInstancePropertiesReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestInstancePropertiesReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void RequestInstancePropertiesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.RequestInstancePropertiesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  propertymatch_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && instanceid_ != nullptr) {
    delete instanceid_;
  }
  instanceid_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestInstancePropertiesReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_instanceid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string propertyMatch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_propertymatch(), ptr, ctx, "BasilServer.RequestInstancePropertiesReq.propertyMatch");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestInstancePropertiesReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.RequestInstancePropertiesReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BasilType.InstanceIdentifier instanceId = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_instanceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string propertyMatch = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_propertymatch()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->propertymatch().data(), static_cast<int>(this->propertymatch().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.RequestInstancePropertiesReq.propertyMatch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.RequestInstancePropertiesReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.RequestInstancePropertiesReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestInstancePropertiesReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.RequestInstancePropertiesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::instanceid(this), output);
  }

  // string propertyMatch = 3;
  if (this->propertymatch().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->propertymatch().data(), static_cast<int>(this->propertymatch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BasilServer.RequestInstancePropertiesReq.propertyMatch");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->propertymatch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.RequestInstancePropertiesReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestInstancePropertiesReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.RequestInstancePropertiesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::instanceid(this), target);
  }

  // string propertyMatch = 3;
  if (this->propertymatch().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->propertymatch().data(), static_cast<int>(this->propertymatch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BasilServer.RequestInstancePropertiesReq.propertyMatch");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->propertymatch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.RequestInstancePropertiesReq)
  return target;
}

size_t RequestInstancePropertiesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.RequestInstancePropertiesReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string propertyMatch = 3;
  if (this->propertymatch().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->propertymatch());
  }

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // .BasilType.InstanceIdentifier instanceId = 2;
  if (this->has_instanceid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *instanceid_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestInstancePropertiesReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.RequestInstancePropertiesReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestInstancePropertiesReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestInstancePropertiesReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.RequestInstancePropertiesReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.RequestInstancePropertiesReq)
    MergeFrom(*source);
  }
}

void RequestInstancePropertiesReq::MergeFrom(const RequestInstancePropertiesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.RequestInstancePropertiesReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.propertymatch().size() > 0) {

    propertymatch_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.propertymatch_);
  }
  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.has_instanceid()) {
    mutable_instanceid()->::BasilType::InstanceIdentifier::MergeFrom(from.instanceid());
  }
}

void RequestInstancePropertiesReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.RequestInstancePropertiesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestInstancePropertiesReq::CopyFrom(const RequestInstancePropertiesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.RequestInstancePropertiesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestInstancePropertiesReq::IsInitialized() const {
  return true;
}

void RequestInstancePropertiesReq::Swap(RequestInstancePropertiesReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestInstancePropertiesReq::InternalSwap(RequestInstancePropertiesReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  propertymatch_.Swap(&other->propertymatch_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_, other->auth_);
  swap(instanceid_, other->instanceid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestInstancePropertiesReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse() {}
RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::MergeFrom(const RequestInstancePropertiesResp_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void RequestInstancePropertiesResp::InitAsDefaultInstance() {
  ::BasilServer::_RequestInstancePropertiesResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class RequestInstancePropertiesResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const RequestInstancePropertiesResp* msg);
};

const ::BasilType::BasilException&
RequestInstancePropertiesResp::HasBitSetters::exception(const RequestInstancePropertiesResp* msg) {
  return *msg->exception_;
}
void RequestInstancePropertiesResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestInstancePropertiesResp::kExceptionFieldNumber;
const int RequestInstancePropertiesResp::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestInstancePropertiesResp::RequestInstancePropertiesResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.RequestInstancePropertiesResp)
}
RequestInstancePropertiesResp::RequestInstancePropertiesResp(const RequestInstancePropertiesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.RequestInstancePropertiesResp)
}

void RequestInstancePropertiesResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestInstancePropertiesResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

RequestInstancePropertiesResp::~RequestInstancePropertiesResp() {
  // @@protoc_insertion_point(destructor:BasilServer.RequestInstancePropertiesResp)
  SharedDtor();
}

void RequestInstancePropertiesResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void RequestInstancePropertiesResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestInstancePropertiesResp& RequestInstancePropertiesResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestInstancePropertiesResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void RequestInstancePropertiesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.RequestInstancePropertiesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RequestInstancePropertiesResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> properties = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RequestInstancePropertiesResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.RequestInstancePropertiesResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> properties = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              RequestInstancePropertiesResp_PropertiesEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&properties_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.RequestInstancePropertiesResp.PropertiesEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.RequestInstancePropertiesResp.PropertiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.RequestInstancePropertiesResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.RequestInstancePropertiesResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RequestInstancePropertiesResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.RequestInstancePropertiesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  // map<string, string> properties = 2;
  if (!this->properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestInstancePropertiesResp.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestInstancePropertiesResp.PropertiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToCodedStream(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToCodedStream(2, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.RequestInstancePropertiesResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestInstancePropertiesResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.RequestInstancePropertiesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  // map<string, string> properties = 2;
  if (!this->properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestInstancePropertiesResp.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.RequestInstancePropertiesResp.PropertiesEntry.value");
      }
    };

    if (false &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToArray(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        target = RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::Funcs::SerializeToArray(2, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.RequestInstancePropertiesResp)
  return target;
}

size_t RequestInstancePropertiesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.RequestInstancePropertiesResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> properties = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->properties().begin();
      it != this->properties().end(); ++it) {
    total_size += RequestInstancePropertiesResp_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestInstancePropertiesResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.RequestInstancePropertiesResp)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestInstancePropertiesResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestInstancePropertiesResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.RequestInstancePropertiesResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.RequestInstancePropertiesResp)
    MergeFrom(*source);
  }
}

void RequestInstancePropertiesResp::MergeFrom(const RequestInstancePropertiesResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.RequestInstancePropertiesResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void RequestInstancePropertiesResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.RequestInstancePropertiesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestInstancePropertiesResp::CopyFrom(const RequestInstancePropertiesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.RequestInstancePropertiesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestInstancePropertiesResp::IsInitialized() const {
  return true;
}

void RequestInstancePropertiesResp::Swap(RequestInstancePropertiesResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestInstancePropertiesResp::InternalSwap(RequestInstancePropertiesResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  properties_.Swap(&other->properties_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestInstancePropertiesResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CloseSessionReq::InitAsDefaultInstance() {
  ::BasilServer::_CloseSessionReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
}
class CloseSessionReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const CloseSessionReq* msg);
};

const ::BasilType::AccessAuthorization&
CloseSessionReq::HasBitSetters::auth(const CloseSessionReq* msg) {
  return *msg->auth_;
}
void CloseSessionReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseSessionReq::kAuthFieldNumber;
const int CloseSessionReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseSessionReq::CloseSessionReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.CloseSessionReq)
}
CloseSessionReq::CloseSessionReq(const CloseSessionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.CloseSessionReq)
}

void CloseSessionReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloseSessionReq_BasilServer_2eproto.base);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  auth_ = nullptr;
}

CloseSessionReq::~CloseSessionReq() {
  // @@protoc_insertion_point(destructor:BasilServer.CloseSessionReq)
  SharedDtor();
}

void CloseSessionReq::SharedDtor() {
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete auth_;
}

void CloseSessionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloseSessionReq& CloseSessionReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloseSessionReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void CloseSessionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.CloseSessionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CloseSessionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_reason(), ptr, ctx, "BasilServer.CloseSessionReq.reason");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CloseSessionReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.CloseSessionReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.CloseSessionReq.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.CloseSessionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.CloseSessionReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CloseSessionReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.CloseSessionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BasilServer.CloseSessionReq.reason");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.CloseSessionReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* CloseSessionReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.CloseSessionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "BasilServer.CloseSessionReq.reason");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.CloseSessionReq)
  return target;
}

size_t CloseSessionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.CloseSessionReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseSessionReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.CloseSessionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseSessionReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloseSessionReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.CloseSessionReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.CloseSessionReq)
    MergeFrom(*source);
  }
}

void CloseSessionReq::MergeFrom(const CloseSessionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.CloseSessionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
}

void CloseSessionReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.CloseSessionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseSessionReq::CopyFrom(const CloseSessionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.CloseSessionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseSessionReq::IsInitialized() const {
  return true;
}

void CloseSessionReq::Swap(CloseSessionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseSessionReq::InternalSwap(CloseSessionReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseSessionReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CloseSessionResp::InitAsDefaultInstance() {
  ::BasilServer::_CloseSessionResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class CloseSessionResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const CloseSessionResp* msg);
};

const ::BasilType::BasilException&
CloseSessionResp::HasBitSetters::exception(const CloseSessionResp* msg) {
  return *msg->exception_;
}
void CloseSessionResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseSessionResp::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseSessionResp::CloseSessionResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.CloseSessionResp)
}
CloseSessionResp::CloseSessionResp(const CloseSessionResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.CloseSessionResp)
}

void CloseSessionResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloseSessionResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

CloseSessionResp::~CloseSessionResp() {
  // @@protoc_insertion_point(destructor:BasilServer.CloseSessionResp)
  SharedDtor();
}

void CloseSessionResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void CloseSessionResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloseSessionResp& CloseSessionResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloseSessionResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void CloseSessionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.CloseSessionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CloseSessionResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CloseSessionResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.CloseSessionResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.CloseSessionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.CloseSessionResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CloseSessionResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.CloseSessionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.CloseSessionResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* CloseSessionResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.CloseSessionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.CloseSessionResp)
  return target;
}

size_t CloseSessionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.CloseSessionResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseSessionResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.CloseSessionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseSessionResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloseSessionResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.CloseSessionResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.CloseSessionResp)
    MergeFrom(*source);
  }
}

void CloseSessionResp::MergeFrom(const CloseSessionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.CloseSessionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void CloseSessionResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.CloseSessionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseSessionResp::CopyFrom(const CloseSessionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.CloseSessionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseSessionResp::IsInitialized() const {
  return true;
}

void CloseSessionResp::Swap(CloseSessionResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseSessionResp::InternalSwap(CloseSessionResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseSessionResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

MakeConnectionReq_ConnectionParamsEntry_DoNotUse::MakeConnectionReq_ConnectionParamsEntry_DoNotUse() {}
MakeConnectionReq_ConnectionParamsEntry_DoNotUse::MakeConnectionReq_ConnectionParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MakeConnectionReq_ConnectionParamsEntry_DoNotUse::MergeFrom(const MakeConnectionReq_ConnectionParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MakeConnectionReq_ConnectionParamsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MakeConnectionReq_ConnectionParamsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MakeConnectionReq::InitAsDefaultInstance() {
  ::BasilServer::_MakeConnectionReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
}
class MakeConnectionReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const MakeConnectionReq* msg);
};

const ::BasilType::AccessAuthorization&
MakeConnectionReq::HasBitSetters::auth(const MakeConnectionReq* msg) {
  return *msg->auth_;
}
void MakeConnectionReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeConnectionReq::kAuthFieldNumber;
const int MakeConnectionReq::kConnectionParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeConnectionReq::MakeConnectionReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.MakeConnectionReq)
}
MakeConnectionReq::MakeConnectionReq(const MakeConnectionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connectionparams_.MergeFrom(from.connectionparams_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.MakeConnectionReq)
}

void MakeConnectionReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MakeConnectionReq_BasilServer_2eproto.base);
  auth_ = nullptr;
}

MakeConnectionReq::~MakeConnectionReq() {
  // @@protoc_insertion_point(destructor:BasilServer.MakeConnectionReq)
  SharedDtor();
}

void MakeConnectionReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
}

void MakeConnectionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MakeConnectionReq& MakeConnectionReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MakeConnectionReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void MakeConnectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.MakeConnectionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connectionparams_.Clear();
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MakeConnectionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> connectionParams = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&connectionparams_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MakeConnectionReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.MakeConnectionReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> connectionParams = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          MakeConnectionReq_ConnectionParamsEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              MakeConnectionReq_ConnectionParamsEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&connectionparams_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.MakeConnectionReq.ConnectionParamsEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "BasilServer.MakeConnectionReq.ConnectionParamsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.MakeConnectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.MakeConnectionReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MakeConnectionReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.MakeConnectionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // map<string, string> connectionParams = 2;
  if (!this->connectionparams().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.MakeConnectionReq.ConnectionParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.MakeConnectionReq.ConnectionParamsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->connectionparams().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->connectionparams().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->connectionparams().begin();
          it != this->connectionparams().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        MakeConnectionReq_ConnectionParamsEntry_DoNotUse::Funcs::SerializeToCodedStream(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->connectionparams().begin();
          it != this->connectionparams().end(); ++it) {
        MakeConnectionReq_ConnectionParamsEntry_DoNotUse::Funcs::SerializeToCodedStream(2, it->first, it->second, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.MakeConnectionReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* MakeConnectionReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.MakeConnectionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // map<string, string> connectionParams = 2;
  if (!this->connectionparams().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.MakeConnectionReq.ConnectionParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "BasilServer.MakeConnectionReq.ConnectionParamsEntry.value");
      }
    };

    if (false &&
        this->connectionparams().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->connectionparams().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->connectionparams().begin();
          it != this->connectionparams().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MakeConnectionReq_ConnectionParamsEntry_DoNotUse::Funcs::SerializeToArray(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->connectionparams().begin();
          it != this->connectionparams().end(); ++it) {
        target = MakeConnectionReq_ConnectionParamsEntry_DoNotUse::Funcs::SerializeToArray(2, it->first, it->second, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.MakeConnectionReq)
  return target;
}

size_t MakeConnectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.MakeConnectionReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> connectionParams = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->connectionparams_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->connectionparams().begin();
      it != this->connectionparams().end(); ++it) {
    total_size += MakeConnectionReq_ConnectionParamsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeConnectionReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.MakeConnectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeConnectionReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MakeConnectionReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.MakeConnectionReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.MakeConnectionReq)
    MergeFrom(*source);
  }
}

void MakeConnectionReq::MergeFrom(const MakeConnectionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.MakeConnectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connectionparams_.MergeFrom(from.connectionparams_);
  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
}

void MakeConnectionReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.MakeConnectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeConnectionReq::CopyFrom(const MakeConnectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.MakeConnectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeConnectionReq::IsInitialized() const {
  return true;
}

void MakeConnectionReq::Swap(MakeConnectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeConnectionReq::InternalSwap(MakeConnectionReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connectionparams_.Swap(&other->connectionparams_);
  swap(auth_, other->auth_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MakeConnectionReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MakeConnectionResp::InitAsDefaultInstance() {
  ::BasilServer::_MakeConnectionResp_default_instance_._instance.get_mutable()->exception_ = const_cast< ::BasilType::BasilException*>(
      ::BasilType::BasilException::internal_default_instance());
}
class MakeConnectionResp::HasBitSetters {
 public:
  static const ::BasilType::BasilException& exception(const MakeConnectionResp* msg);
};

const ::BasilType::BasilException&
MakeConnectionResp::HasBitSetters::exception(const MakeConnectionResp* msg) {
  return *msg->exception_;
}
void MakeConnectionResp::clear_exception() {
  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeConnectionResp::kExceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeConnectionResp::MakeConnectionResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.MakeConnectionResp)
}
MakeConnectionResp::MakeConnectionResp(const MakeConnectionResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_exception()) {
    exception_ = new ::BasilType::BasilException(*from.exception_);
  } else {
    exception_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:BasilServer.MakeConnectionResp)
}

void MakeConnectionResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MakeConnectionResp_BasilServer_2eproto.base);
  exception_ = nullptr;
}

MakeConnectionResp::~MakeConnectionResp() {
  // @@protoc_insertion_point(destructor:BasilServer.MakeConnectionResp)
  SharedDtor();
}

void MakeConnectionResp::SharedDtor() {
  if (this != internal_default_instance()) delete exception_;
}

void MakeConnectionResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MakeConnectionResp& MakeConnectionResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MakeConnectionResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void MakeConnectionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.MakeConnectionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && exception_ != nullptr) {
    delete exception_;
  }
  exception_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MakeConnectionResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.BasilException exception = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_exception(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MakeConnectionResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.MakeConnectionResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.BasilException exception = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_exception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.MakeConnectionResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.MakeConnectionResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MakeConnectionResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.MakeConnectionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::exception(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.MakeConnectionResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* MakeConnectionResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.MakeConnectionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::exception(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.MakeConnectionResp)
  return target;
}

size_t MakeConnectionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.MakeConnectionResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.BasilException exception = 1;
  if (this->has_exception()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *exception_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeConnectionResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.MakeConnectionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeConnectionResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MakeConnectionResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.MakeConnectionResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.MakeConnectionResp)
    MergeFrom(*source);
  }
}

void MakeConnectionResp::MergeFrom(const MakeConnectionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.MakeConnectionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_exception()) {
    mutable_exception()->::BasilType::BasilException::MergeFrom(from.exception());
  }
}

void MakeConnectionResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.MakeConnectionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeConnectionResp::CopyFrom(const MakeConnectionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.MakeConnectionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeConnectionResp::IsInitialized() const {
  return true;
}

void MakeConnectionResp::Swap(MakeConnectionResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeConnectionResp::InternalSwap(MakeConnectionResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(exception_, other->exception_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MakeConnectionResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AliveCheckReq::InitAsDefaultInstance() {
  ::BasilServer::_AliveCheckReq_default_instance_._instance.get_mutable()->auth_ = const_cast< ::BasilType::AccessAuthorization*>(
      ::BasilType::AccessAuthorization::internal_default_instance());
}
class AliveCheckReq::HasBitSetters {
 public:
  static const ::BasilType::AccessAuthorization& auth(const AliveCheckReq* msg);
};

const ::BasilType::AccessAuthorization&
AliveCheckReq::HasBitSetters::auth(const AliveCheckReq* msg) {
  return *msg->auth_;
}
void AliveCheckReq::clear_auth() {
  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AliveCheckReq::kAuthFieldNumber;
const int AliveCheckReq::kTimeFieldNumber;
const int AliveCheckReq::kSequenceNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AliveCheckReq::AliveCheckReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.AliveCheckReq)
}
AliveCheckReq::AliveCheckReq(const AliveCheckReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_auth()) {
    auth_ = new ::BasilType::AccessAuthorization(*from.auth_);
  } else {
    auth_ = nullptr;
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequencenum_) -
    reinterpret_cast<char*>(&time_)) + sizeof(sequencenum_));
  // @@protoc_insertion_point(copy_constructor:BasilServer.AliveCheckReq)
}

void AliveCheckReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AliveCheckReq_BasilServer_2eproto.base);
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenum_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(sequencenum_));
}

AliveCheckReq::~AliveCheckReq() {
  // @@protoc_insertion_point(destructor:BasilServer.AliveCheckReq)
  SharedDtor();
}

void AliveCheckReq::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
}

void AliveCheckReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AliveCheckReq& AliveCheckReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AliveCheckReq_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void AliveCheckReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.AliveCheckReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && auth_ != nullptr) {
    delete auth_;
  }
  auth_ = nullptr;
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenum_) -
      reinterpret_cast<char*>(&time_)) + sizeof(sequencenum_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AliveCheckReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_auth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sequenceNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          sequencenum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AliveCheckReq::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.AliveCheckReq)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BasilType.AccessAuthorization auth = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sequenceNum = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequencenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.AliveCheckReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.AliveCheckReq)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AliveCheckReq::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.AliveCheckReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::auth(this), output);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  // int32 sequenceNum = 3;
  if (this->sequencenum() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->sequencenum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.AliveCheckReq)
}

::PROTOBUF_NAMESPACE_ID::uint8* AliveCheckReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.AliveCheckReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::auth(this), target);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  // int32 sequenceNum = 3;
  if (this->sequencenum() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->sequencenum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.AliveCheckReq)
  return target;
}

size_t AliveCheckReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.AliveCheckReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .BasilType.AccessAuthorization auth = 1;
  if (this->has_auth()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // int32 sequenceNum = 3;
  if (this->sequencenum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->sequencenum());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AliveCheckReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.AliveCheckReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AliveCheckReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AliveCheckReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.AliveCheckReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.AliveCheckReq)
    MergeFrom(*source);
  }
}

void AliveCheckReq::MergeFrom(const AliveCheckReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.AliveCheckReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth()) {
    mutable_auth()->::BasilType::AccessAuthorization::MergeFrom(from.auth());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.sequencenum() != 0) {
    set_sequencenum(from.sequencenum());
  }
}

void AliveCheckReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.AliveCheckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AliveCheckReq::CopyFrom(const AliveCheckReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.AliveCheckReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AliveCheckReq::IsInitialized() const {
  return true;
}

void AliveCheckReq::Swap(AliveCheckReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AliveCheckReq::InternalSwap(AliveCheckReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(auth_, other->auth_);
  swap(time_, other->time_);
  swap(sequencenum_, other->sequencenum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AliveCheckReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AliveCheckResp::InitAsDefaultInstance() {
}
class AliveCheckResp::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AliveCheckResp::kTimeFieldNumber;
const int AliveCheckResp::kSequenceNumFieldNumber;
const int AliveCheckResp::kTimeReceivedFieldNumber;
const int AliveCheckResp::kSequenceNumReceivedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AliveCheckResp::AliveCheckResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BasilServer.AliveCheckResp)
}
AliveCheckResp::AliveCheckResp(const AliveCheckResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequencenumreceived_) -
    reinterpret_cast<char*>(&time_)) + sizeof(sequencenumreceived_));
  // @@protoc_insertion_point(copy_constructor:BasilServer.AliveCheckResp)
}

void AliveCheckResp::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenumreceived_) -
      reinterpret_cast<char*>(&time_)) + sizeof(sequencenumreceived_));
}

AliveCheckResp::~AliveCheckResp() {
  // @@protoc_insertion_point(destructor:BasilServer.AliveCheckResp)
  SharedDtor();
}

void AliveCheckResp::SharedDtor() {
}

void AliveCheckResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AliveCheckResp& AliveCheckResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AliveCheckResp_BasilServer_2eproto.base);
  return *internal_default_instance();
}


void AliveCheckResp::Clear() {
// @@protoc_insertion_point(message_clear_start:BasilServer.AliveCheckResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenumreceived_) -
      reinterpret_cast<char*>(&time_)) + sizeof(sequencenumreceived_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AliveCheckResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sequenceNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sequencenum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 timeReceived = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          timereceived_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sequenceNumReceived = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          sequencenumreceived_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AliveCheckResp::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:BasilServer.AliveCheckResp)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 time = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sequenceNum = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequencenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timeReceived = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timereceived_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sequenceNumReceived = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequencenumreceived_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BasilServer.AliveCheckResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BasilServer.AliveCheckResp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AliveCheckResp::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BasilServer.AliveCheckResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 time = 1;
  if (this->time() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->time(), output);
  }

  // int32 sequenceNum = 2;
  if (this->sequencenum() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->sequencenum(), output);
  }

  // uint64 timeReceived = 3;
  if (this->timereceived() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(3, this->timereceived(), output);
  }

  // int32 sequenceNumReceived = 4;
  if (this->sequencenumreceived() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->sequencenumreceived(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BasilServer.AliveCheckResp)
}

::PROTOBUF_NAMESPACE_ID::uint8* AliveCheckResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BasilServer.AliveCheckResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 time = 1;
  if (this->time() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->time(), target);
  }

  // int32 sequenceNum = 2;
  if (this->sequencenum() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->sequencenum(), target);
  }

  // uint64 timeReceived = 3;
  if (this->timereceived() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->timereceived(), target);
  }

  // int32 sequenceNumReceived = 4;
  if (this->sequencenumreceived() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->sequencenumreceived(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BasilServer.AliveCheckResp)
  return target;
}

size_t AliveCheckResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BasilServer.AliveCheckResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // uint64 timeReceived = 3;
  if (this->timereceived() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->timereceived());
  }

  // int32 sequenceNum = 2;
  if (this->sequencenum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->sequencenum());
  }

  // int32 sequenceNumReceived = 4;
  if (this->sequencenumreceived() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->sequencenumreceived());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AliveCheckResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BasilServer.AliveCheckResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AliveCheckResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AliveCheckResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BasilServer.AliveCheckResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BasilServer.AliveCheckResp)
    MergeFrom(*source);
  }
}

void AliveCheckResp::MergeFrom(const AliveCheckResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BasilServer.AliveCheckResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.timereceived() != 0) {
    set_timereceived(from.timereceived());
  }
  if (from.sequencenum() != 0) {
    set_sequencenum(from.sequencenum());
  }
  if (from.sequencenumreceived() != 0) {
    set_sequencenumreceived(from.sequencenumreceived());
  }
}

void AliveCheckResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BasilServer.AliveCheckResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AliveCheckResp::CopyFrom(const AliveCheckResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BasilServer.AliveCheckResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AliveCheckResp::IsInitialized() const {
  return true;
}

void AliveCheckResp::Swap(AliveCheckResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AliveCheckResp::InternalSwap(AliveCheckResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(time_, other->time_);
  swap(timereceived_, other->timereceived_);
  swap(sequencenum_, other->sequencenum_);
  swap(sequencenumreceived_, other->sequencenumreceived_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AliveCheckResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace BasilServer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::BasilServer::IdentifyDisplayableObjectReq* Arena::CreateMaybeMessage< ::BasilServer::IdentifyDisplayableObjectReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::IdentifyDisplayableObjectReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::IdentifyDisplayableObjectResp* Arena::CreateMaybeMessage< ::BasilServer::IdentifyDisplayableObjectResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::IdentifyDisplayableObjectResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::ForgetDisplayableObjectReq* Arena::CreateMaybeMessage< ::BasilServer::ForgetDisplayableObjectReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::ForgetDisplayableObjectReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::ForgetDisplayableObjectResp* Arena::CreateMaybeMessage< ::BasilServer::ForgetDisplayableObjectResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::ForgetDisplayableObjectResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse* Arena::CreateMaybeMessage< ::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::CreateObjectInstanceReq_PropertiesToSetEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::CreateObjectInstanceReq* Arena::CreateMaybeMessage< ::BasilServer::CreateObjectInstanceReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::CreateObjectInstanceReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::CreateObjectInstanceResp* Arena::CreateMaybeMessage< ::BasilServer::CreateObjectInstanceResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::CreateObjectInstanceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::DeleteObjectInstanceReq* Arena::CreateMaybeMessage< ::BasilServer::DeleteObjectInstanceReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::DeleteObjectInstanceReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::DeleteObjectInstanceResp* Arena::CreateMaybeMessage< ::BasilServer::DeleteObjectInstanceResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::DeleteObjectInstanceResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse* Arena::CreateMaybeMessage< ::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateObjectPropertyReq_PropsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateObjectPropertyReq* Arena::CreateMaybeMessage< ::BasilServer::UpdateObjectPropertyReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateObjectPropertyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateObjectPropertyResp* Arena::CreateMaybeMessage< ::BasilServer::UpdateObjectPropertyResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateObjectPropertyResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse* Arena::CreateMaybeMessage< ::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateInstancePropertyReq_PropsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateInstancePropertyReq* Arena::CreateMaybeMessage< ::BasilServer::UpdateInstancePropertyReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateInstancePropertyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateInstancePropertyResp* Arena::CreateMaybeMessage< ::BasilServer::UpdateInstancePropertyResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateInstancePropertyResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateInstancePositionReq* Arena::CreateMaybeMessage< ::BasilServer::UpdateInstancePositionReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateInstancePositionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::UpdateInstancePositionResp* Arena::CreateMaybeMessage< ::BasilServer::UpdateInstancePositionResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::UpdateInstancePositionResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::RequestObjectPropertiesReq* Arena::CreateMaybeMessage< ::BasilServer::RequestObjectPropertiesReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::RequestObjectPropertiesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::RequestObjectPropertiesResp_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::RequestObjectPropertiesResp* Arena::CreateMaybeMessage< ::BasilServer::RequestObjectPropertiesResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::RequestObjectPropertiesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::RequestInstancePropertiesReq* Arena::CreateMaybeMessage< ::BasilServer::RequestInstancePropertiesReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::RequestInstancePropertiesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::RequestInstancePropertiesResp_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::RequestInstancePropertiesResp* Arena::CreateMaybeMessage< ::BasilServer::RequestInstancePropertiesResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::RequestInstancePropertiesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::CloseSessionReq* Arena::CreateMaybeMessage< ::BasilServer::CloseSessionReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::CloseSessionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::CloseSessionResp* Arena::CreateMaybeMessage< ::BasilServer::CloseSessionResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::CloseSessionResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::MakeConnectionReq_ConnectionParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::MakeConnectionReq* Arena::CreateMaybeMessage< ::BasilServer::MakeConnectionReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::MakeConnectionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::MakeConnectionResp* Arena::CreateMaybeMessage< ::BasilServer::MakeConnectionResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::MakeConnectionResp >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::AliveCheckReq* Arena::CreateMaybeMessage< ::BasilServer::AliveCheckReq >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::AliveCheckReq >(arena);
}
template<> PROTOBUF_NOINLINE ::BasilServer::AliveCheckResp* Arena::CreateMaybeMessage< ::BasilServer::AliveCheckResp >(Arena* arena) {
  return Arena::CreateInternal< ::BasilServer::AliveCheckResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
